{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "AsegoRestApiService",
    "description": "Bereitstellung von Zugriffen um Daten aus asego.net abzurufen. Um die folgende Aktionen ausführen zu können ist eine Authentifizierung notwendig. Das bearer Token wird über den Endpoint '/auth/token' nach Benutzer/Passwort Eingabe bereitgestellt und ist fortan stets oben unter Token inkl. zusatz 'Bearer ' anzugeben.",
    "contact": {
      "name": "ASEGO",
      "url": "http://www.asego.de",
      "email": "info@asego.de"
    }
  },
  "host": "localhost:444",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/Artikel/Suche": {
      "post": {
        "tags": [
          "Artikel"
        ],
        "summary": "Durchsucht alle Artikel",
        "operationId": "ArtikelV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Artikel.Models.FilterArtikelV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Artikel.Models.ListArtikelV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Artikel/{uid}": {
      "get": {
        "tags": [
          "Artikel",
          "Geraete"
        ],
        "summary": "Gibt einen Artikel mit allen Details zurück",
        "operationId": "ArtikelV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Artikel.Models.ArtikelV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Artikel not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Artikel/{uid}/Lagerbestand": {
      "get": {
        "tags": [
          "Artikel"
        ],
        "summary": "Gibt die Lagerbestände über alle Filialen eines Artikels zurück",
        "operationId": "ArtikelV1_Lagerbestand",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Artikel.Models.ArtikelLagerbestandV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Artikel not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Artikel/{uid}/Lagerbestand/{inst}": {
      "get": {
        "tags": [
          "Artikel"
        ],
        "summary": "Gibt den Lagerbestand eines Artikels in einer Filiale zurück",
        "operationId": "ArtikelV1_LagerbestandFuerInst",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inst",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Artikel not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Artikel/{uid}/Preise": {
      "get": {
        "tags": [
          "Artikel"
        ],
        "summary": "Gibt die Preise über alle Filialen eines Artikels zurück",
        "operationId": "ArtikelV1_Preise",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Artikel.Models.ArtikelPreiseV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Artikel not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Artikel/{uid}/Preise/{inst}": {
      "get": {
        "tags": [
          "Artikel"
        ],
        "summary": "Gibt den Preis eines Artikels in einer Filiale zurück",
        "operationId": "ArtikelV1_PreiseFuerInst",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inst",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Artikel.Models.ArtikelPreiseV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Artikel not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Artikel/{artikelUid}/Lieferant/{lieferantUid}": {
      "get": {
        "tags": [
          "Artikel"
        ],
        "summary": "Gibt Informationen zum Artikel je Liefernt zurück",
        "operationId": "ArtikelV1_ArtikelLieferantenInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "artikelUid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "lieferantUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Artikel.Models.ArtikelLieferantV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Artikel / Lieferant not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Artikel/Bild/{artkelBildUid}": {
      "get": {
        "tags": [
          "Artikel"
        ],
        "summary": "Gibt das Artikel Bild als Content zurück",
        "operationId": "ArtikelV1_ArtikelBild",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "artkelBildUid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image in Content with content-disposition: attachment and Original fileName"
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Artikelbild not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Arzt/Suche": {
      "post": {
        "tags": [
          "Arzt"
        ],
        "summary": "Durchsucht alle Ärzte",
        "operationId": "ArztV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Arzt.Models.FilterArztV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Arzt.Models.ListArztV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Arzt/{arztUid}": {
      "get": {
        "tags": [
          "Arzt",
          "Kunden"
        ],
        "summary": "Gibt einen Arzt mit allen Details zurück",
        "operationId": "ArztV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "arztUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Arzt.Models.ArztV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Arzt not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Arzt"
        ],
        "summary": "Führt Änderungen an einen Arzt durch",
        "operationId": "ArztV1_UpdateArzt",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "arztUid",
            "in": "path",
            "description": "KundenUid",
            "required": true,
            "type": "string"
          },
          {
            "name": "arzt2Save",
            "in": "body",
            "description": "Die zu speichernden Änderungen, soll ein Wert nicht geändert werden, dann NULL übergeben bzw. nicht mitsenden",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.Arzt.Models.ArztEditV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Ungültige Werte. z.B. nicht vorhandene AnredeID "
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Arzt not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Arzt/Create": {
      "post": {
        "tags": [
          "Arzt"
        ],
        "summary": "Legt einen neuen Arzt an",
        "operationId": "ArztV1_CreateArzt",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "arzt2Save",
            "in": "body",
            "description": "Die Daten des neu anzulegenden Arztes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.Arzt.Models.ArztCreateV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Uid des soeben angelegten neuen Arztes",
            "schema": {
              "$ref": "#/definitions/AsegoApi.CreatedElementResponse"
            }
          },
          "400": {
            "description": "Ungültige Werte. z.B. nicht vorhandene Pflichtfelder"
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Audiogramm/Suche": {
      "post": {
        "tags": [
          "Audiogramm"
        ],
        "summary": "Durchsucht die AudiogrammSammlung",
        "operationId": "AudiogrammV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Audiogramm.FilterAudiogrammSammlungV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Audiogramm.ListAudiogrammV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Audiogramm/{uid}/Sprache": {
      "get": {
        "tags": [
          "Audiogramm"
        ],
        "summary": "Gibt die Sprache eines Audiogrammes mit allen Details zurück",
        "operationId": "AudiogrammV1_SpracheDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Audiogramm.AudiogrammSpracheV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Audiogramm Sprache not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Audiogramm/{uid}/Ton": {
      "get": {
        "tags": [
          "Audiogramm"
        ],
        "summary": "Gibt den Ton eines Audiogrammes mit allen Details zurück",
        "operationId": "AudiogrammV1_TonDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Audiogramm.AudiogrammTonV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Audiogramm Ton not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Audiogramm/Kunden/{kundenUid}": {
      "get": {
        "tags": [
          "Audiogramm"
        ],
        "summary": "Gibt die AudiogrammSammlung eines Kunden zurück",
        "operationId": "AudiogrammV1_KundenAudiogramme",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Audiogramm.ListAudiogrammV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Audiogramm/Kunden/{kundenUid}/Ton": {
      "post": {
        "tags": [
          "Audiogramm"
        ],
        "summary": "Speichert das übergebene (Ton)Audiogramm als neues Element im Kunden ab",
        "operationId": "AudiogrammV1_CreateAudiogrammToneFuerKunde",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "audiogramm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.Audiogramm.AudiogrammV1Controller.CreateNewAudiogrammTonV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Uid des soeben angelegten neuen Audiogramms",
            "schema": {
              "$ref": "#/definitions/AsegoApi.CreatedElementResponse"
            }
          },
          "400": {
            "description": "Ungültige Werte. z.B. nicht vorhandene Pflichtfelder"
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Audiogramm/Kunden/{kundenUid}/Sprache": {
      "post": {
        "tags": [
          "Audiogramm"
        ],
        "summary": "Speichert das übergebene (Sprach)Audiogramm als neues Element im Kunden ab",
        "operationId": "AudiogrammV1_CreateAudiogrammSpeechKunde",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "audiogramm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.Audiogramm.AudiogrammV1Controller.CreateNewAudiogrammSpeechV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Uid des soeben angelegten neuen Audiogramms",
            "schema": {
              "$ref": "#/definitions/AsegoApi.CreatedElementResponse"
            }
          },
          "400": {
            "description": "Ungültige Werte. z.B. nicht vorhandene Pflichtfelder"
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Auftragseingang/REA/Suche": {
      "post": {
        "tags": [
          "Auftragseingang"
        ],
        "summary": "Durchsucht den Auftragseingang nach REA",
        "operationId": "AuftragseingangV1_SucheREA",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Auftragseingang.Models.FilterREAAuftragseingangV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Auftragseingang.Models.ListREAAuftragseingangV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Auftragseingang/OTA/Suche": {
      "post": {
        "tags": [
          "Auftragseingang"
        ],
        "summary": "Durchsucht den Auftragseingang nach OTA",
        "operationId": "AuftragseingangV1_SucheOTA",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Auftragseingang.Models.FilterOTAAuftragseingangV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Auftragseingang.Models.ListOTAAuftragseingangV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Benutzer/Suche": {
      "post": {
        "tags": [
          "Benutzer"
        ],
        "summary": "Durchsucht alle Benutzer",
        "operationId": "BenutzerV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Benutzer.Models.FilterBenutzerV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Benutzer.Models.ListBenutzerV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Benutzer/{uid}": {
      "get": {
        "tags": [
          "Benutzer",
          "Kunden",
          "Serviceplan",
          "Termine"
        ],
        "summary": "Gibt einen Benutzer mit allen Details zurück",
        "operationId": "BenutzerV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Benutzer.Models.BenutzerV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Benutzer not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Filiale/Suche": {
      "post": {
        "tags": [
          "Filiale"
        ],
        "summary": "Durchsucht die Filialen",
        "operationId": "FilialeV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Filiale.Models.FilterFilialeV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Filiale.Models.ListFilialeV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Filiale/{inst}": {
      "get": {
        "tags": [
          "Filiale"
        ],
        "summary": "Gibt eine Filiale mit allen Details zurück",
        "operationId": "FilialeV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inst",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Filiale.Models.FilialeV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Filiale not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Geraete/Suche": {
      "post": {
        "tags": [
          "Geraete"
        ],
        "summary": "Durchsucht die Geräte",
        "operationId": "GeraeteV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Geraete.Models.FilterGeraeteV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Geraete.Models.ListGeraeteV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Geraete/{uid}": {
      "get": {
        "tags": [
          "Geraete"
        ],
        "summary": "Gibt ein Gerät mit allen Details zurück",
        "operationId": "GeraeteV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Geraete.Models.GeraeteV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Geraete not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Info/Quotas": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Gibt Infos zu den Kontingenten zurück",
        "operationId": "InfoV1_Quotas",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Daily / Minute Quota",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Info.InfoV1Controller.Kontingent"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/Warengruppen": {
      "get": {
        "tags": [
          "Keys",
          "Artikel",
          "Geraete"
        ],
        "summary": "Gibt Warengruppen zurück",
        "operationId": "KeysV1_Warengruppen",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/Land": {
      "get": {
        "tags": [
          "Keys",
          "Kunden"
        ],
        "summary": "Gibt Länder zurück",
        "operationId": "KeysV1_Land",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/Bundeslaender": {
      "get": {
        "tags": [
          "Keys",
          "Filiale"
        ],
        "summary": "Gibt die Bundesländer zurück",
        "operationId": "KeysV1_Bundeslaender",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/GeraeteStatus": {
      "get": {
        "tags": [
          "Keys",
          "Geraete"
        ],
        "summary": "Gibt den Gerätestatus zurück",
        "operationId": "KeysV1_GeraeteStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/LagerStatus": {
      "get": {
        "tags": [
          "Keys",
          "Geraete"
        ],
        "summary": "Gibt den Lagerstatus zurück",
        "operationId": "KeysV1_LagerStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/Klassifizierungen": {
      "get": {
        "tags": [
          "Keys",
          "Artikel"
        ],
        "summary": "Gibt Klassifizierungen zurück",
        "operationId": "KeysV1_Klassifizierungen",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/ArtikelGruppen": {
      "get": {
        "tags": [
          "Keys",
          "Artikel"
        ],
        "summary": "Gibt ArtikelGruppen zurück",
        "operationId": "KeysV1_ArtikelGruppen",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/ServiceplanPosStatus": {
      "get": {
        "tags": [
          "Keys",
          "Serviceplan"
        ],
        "summary": "Gibt die Serviceplan Status zurück",
        "operationId": "KeysV1_ServiceplanStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/BatterieTypen": {
      "get": {
        "tags": [
          "Keys",
          "Artikel",
          "Geraete"
        ],
        "summary": "Gibt BatterieTypen zurück",
        "operationId": "KeysV1_BatterieTypen",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/Anreden": {
      "get": {
        "tags": [
          "Keys",
          "Kunden",
          "Benutzer"
        ],
        "summary": "Gibt Anreden zurück",
        "operationId": "KeysV1_Anreden",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/Titel": {
      "get": {
        "tags": [
          "Keys",
          "Kunden"
        ],
        "summary": "Gibt Titel zurück",
        "operationId": "KeysV1_Titel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/NeuKundenGrund": {
      "get": {
        "tags": [
          "Keys",
          "Kunden"
        ],
        "summary": "Gibt Neukundenbegründung zurück",
        "operationId": "KeysV1_NeuKundenGrund",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/InaktivGrund": {
      "get": {
        "tags": [
          "Keys",
          "Kunden"
        ],
        "summary": "Gibt Neukundenbegründung zurück",
        "operationId": "KeysV1_InaktivGrund",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/ArztArt": {
      "get": {
        "tags": [
          "Keys",
          "Arzt"
        ],
        "summary": "Gibt ArztArt zurück",
        "operationId": "KeysV1_ArztArt",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/Farbe": {
      "get": {
        "tags": [
          "Keys",
          "Geraete"
        ],
        "summary": "Gibt die Farbe zurück",
        "operationId": "KeysV1_Farbe",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/Selektionskuerzel": {
      "get": {
        "tags": [
          "Keys",
          "Kunden"
        ],
        "summary": "Gibt die Selektionskürzel zurück",
        "operationId": "KeysV1_Selektionskuerzel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysKundenSelektion"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Keys/ArtikelAttribute": {
      "get": {
        "tags": [
          "Keys",
          "Artikel"
        ],
        "summary": "Gibt Warengruppen zurück",
        "operationId": "KeysV1_ArtikelAttribute",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.ArtikelAttributV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Kostentraeger/Suche": {
      "post": {
        "tags": [
          "Kostentraeger"
        ],
        "summary": "Durchsucht alle Kostenträger",
        "operationId": "KostentraegerV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Kostentraeger.Models.FilterKostentraegerV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Kostentraeger.Models.ListKostentraegerV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Kostentraeger/{uid}": {
      "get": {
        "tags": [
          "Kostentraeger",
          "Kunden"
        ],
        "summary": "Gibt eine Kostenträger mit allen Details zurück",
        "operationId": "KostentraegerV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Kostentraeger.Models.KostentraegerV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Kostentraeger not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Kunden/{kundenUid}/Dokumente/Suche": {
      "post": {
        "tags": [
          "Kunden"
        ],
        "summary": "Sucht nach Dokumenten des übergebenen Kunden",
        "operationId": "KundenV1_Kunden_Dokumente_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "description": "Die KundenUID für den die Dokumente durchsucht werden sollen.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "body",
            "description": "Die Suchkriterien.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Kunden.FilterKundenDokumentV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Kunden.ListKundenDokumentV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Kunden/{kundenUid}/Dokumente/{dokumentUid}": {
      "get": {
        "tags": [
          "Kunden",
          "Geraete",
          "Serviceplan",
          "Termine",
          "Audiogramm"
        ],
        "summary": "Gibt die Dokumentendetails eines Dokumentes (mit Blob) zurück.",
        "operationId": "KundenV1_Kunden_Dokumente_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "description": "Die KundenUid des Dokumentes",
            "required": true,
            "type": "string"
          },
          {
            "name": "dokumentUid",
            "in": "path",
            "description": "Die Uid des Dokumentes",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Kunden.KundenDokumentDetailsV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Dokument not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Kunden"
        ],
        "summary": "Updaten eines Bestehenden Dokumentes eines Kunden, es werden nur die Datengeupdated, die nicht null sind.",
        "operationId": "KundenV1_Kunden_Dokument_Edit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "description": "Die Uid des Kunden des Dokumentes",
            "required": true,
            "type": "string"
          },
          {
            "name": "dokumentUid",
            "in": "path",
            "description": "Die Uid des Dokumentes",
            "required": true,
            "type": "string"
          },
          {
            "name": "dokum2Save",
            "in": "body",
            "description": "Die zu ändernden Daten",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.Kunden.KundenDokumentCreateV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Kunden not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "413": {
            "description": "File to large - The content of the field 'Data' is to Large, see response for MaxFileSize"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Kunden/{kundenUid}/Dokumente": {
      "post": {
        "tags": [
          "Kunden"
        ],
        "summary": "Erstellt zum angegebenen Kunden ein neues Dokument.",
        "operationId": "KundenV1_Kunden_Dokument_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "description": "Id des Kunden für den das Dokument erstellt werden soll.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dokum2Create",
            "in": "body",
            "description": "Die Daten des zu erstellenden Dokuments.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.Kunden.KundenDokumentCreateV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Missing Data - Field 'Data' is null or empty"
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Kunden not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "413": {
            "description": "File to large - The content of the field 'Data' is to Large, see response for MaxFileSize"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Kunden/{kundenUid}/Selektionskuerzel": {
      "get": {
        "tags": [
          "Kunden"
        ],
        "summary": "Gibt alle Selektionskürzel des Kunden zurück",
        "operationId": "KundenV1_Selektionskuerzel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Keys.KeysV1Controller.KeysKundenSelektion"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Kunden"
        ],
        "summary": "Ordnet ein bestehendes Selektionskürzel einen Kunden zu",
        "operationId": "KundenV1_SaveSelektionskuerzelZuordnung",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "description": "Die UID des Kunden dem ein Selektionskürzel zugeordnet werden soll",
            "required": true,
            "type": "string"
          },
          {
            "name": "selektionskuerzelUid",
            "in": "body",
            "description": "Die UID des zuzuordnenden Selektionskürzel",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Kunden / Selektionskuerzel not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Kunden"
        ],
        "summary": "Entfernt eine Selektionskürzelzuordnung zum Kunden",
        "operationId": "KundenV1_DeleteSelektionskuerzelZuordnung",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "description": "Der Kunde, dem das Selektionskürzel entfernt werden soll",
            "required": true,
            "type": "string"
          },
          {
            "name": "selektionskuerzelUid",
            "in": "body",
            "description": "Die UID des zu entfernden Selektionskürzel",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Kunden / Selektionskuerzelzuordnung not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Kunden/Suche": {
      "post": {
        "tags": [
          "Kunden"
        ],
        "summary": "Durchsucht den Kundenstamm",
        "operationId": "KundenV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Kunden.Models.FilterKundenV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Kunden.Models.ListKundenV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Kunden/{kundenUid}": {
      "get": {
        "tags": [
          "Kunden",
          "Geraete",
          "Serviceplan",
          "Termine",
          "Audiogramm"
        ],
        "summary": "Gibt einen Kunden mit allen Details zurück",
        "operationId": "KundenV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Kunden.Models.KundenV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Kunden not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Kunden"
        ],
        "summary": "Führt Änderungen an einen Kunden durch",
        "operationId": "KundenV1_SaveEditKunde",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kundenUid",
            "in": "path",
            "description": "KundenUid",
            "required": true,
            "type": "string"
          },
          {
            "name": "kunde2Save",
            "in": "body",
            "description": "Die zu speichernden Änderungen, soll ein Wert nicht geändert werden, dann NULL übergeben bzw. nicht mitsenden",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.Kunden.Models.KundenEditV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Ungültige Werte. z.B. nicht vorhandene AnredeID "
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Kunden not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Kunden/Create": {
      "post": {
        "tags": [
          "Kunden"
        ],
        "summary": "Legt einen neuen Kunden an",
        "operationId": "KundenV1_CreateKunde",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "kunde",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.Kunden.Models.KundenCreateV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Uid des soeben angelegten neuen Kunden",
            "schema": {
              "$ref": "#/definitions/AsegoApi.CreatedElementResponse"
            }
          },
          "400": {
            "description": "Kunde darf nicht in der Zentrale angelegt werden; Ungültige Werte. z.B. nicht vorhandene AnredeID"
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Lieferanten/Suche": {
      "post": {
        "tags": [
          "Lieferanten"
        ],
        "summary": "Durchsucht alle Lieferanten",
        "operationId": "LieferantenV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Lieferanten.Models.FilterLieferantenV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Lieferanten.Models.ListLieferantenV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Lieferanten/{uid}": {
      "get": {
        "tags": [
          "Lieferanten",
          "Geraete"
        ],
        "summary": "Gibt einen Lieferanten mit allen Details zurück",
        "operationId": "LieferantenV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Lieferanten.Models.LieferantenV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Lieferanten not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/OffeneVorlaeufe/Suche": {
      "post": {
        "tags": [
          "OffeneVorlaeufe"
        ],
        "summary": "Durchsucht alle offene Vorläufe",
        "operationId": "OffeneVorlaeufe_OffeneVorlaeufeSuche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Vorgaenge.Models.FilterListOffenerVorlaufV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Vorgaenge.Models.ListOffenerVorlaufV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Serviceplan/Suche": {
      "post": {
        "tags": [
          "Serviceplan"
        ],
        "summary": "Durchsucht die Servicepläne",
        "operationId": "ServiceplanV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Serviceplan.Models.FilterServiceplanV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Serviceplan.Models.ListServiceplanV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Serviceplan/{uid}": {
      "get": {
        "tags": [
          "Serviceplan"
        ],
        "summary": "Gibt einen Serviceplan mit allen Details zurück",
        "operationId": "ServiceplanV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Serviceplan.Models.ServiceplanV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Serviceplan not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Termine/Suche": {
      "get": {
        "tags": [
          "Termine"
        ],
        "summary": "TEST - Durchsucht die Termine",
        "operationId": "TermineV1_SucheGETTest",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Termine.Models.FilterTermineV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Termine.Models.ListTermineV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Termine"
        ],
        "summary": "Durchsucht die Termine",
        "operationId": "TermineV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Termine.Models.FilterTermineV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Termine.Models.ListTermineV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Termine/{uid}": {
      "get": {
        "tags": [
          "Termine",
          "Serviceplan"
        ],
        "summary": "Gibt einen Termin mit allen Details zurück",
        "operationId": "TermineV1_Details",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Termine.Models.TermineV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Termine not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Termine/TerminStatus": {
      "get": {
        "tags": [
          "Termine"
        ],
        "summary": "Gibt die Terminstatus zurück, diese sind FEST.",
        "operationId": "TermineV1_TerminStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsegoApi.Termine.Services.TerminStatusV1"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Termine/Termintyp/Suche": {
      "post": {
        "tags": [
          "Termine"
        ],
        "summary": "Durchsucht die Termintypen",
        "operationId": "TermineV1_TerminTypSuche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Termintyp.Models.FilterTermintypV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Termintyp.Models.ListTermintypV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Termine/Termintyp/{uid}": {
      "get": {
        "tags": [
          "Termine",
          "Serviceplan"
        ],
        "summary": "Gibt einen Termintyp mit allen Details zurück",
        "operationId": "TermineV1_TerminTypDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Termintyp.Models.TermintypV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "404": {
            "description": "Termintyp not found"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Umsaetze/Suche": {
      "post": {
        "tags": [
          "Umsaetze"
        ],
        "summary": "Durchsucht die Geräte",
        "operationId": "UmsaetzeV1_Suche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Umsaetze.Models.FilterUmsaetzeV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Umsaetze.Models.ListUmsaetzeV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Vorgaenge/Suche": {
      "post": {
        "tags": [
          "Vorgaenge"
        ],
        "summary": "Durchsucht alle Vorgänge",
        "operationId": "VorgaengeV1_VorgaengeSuche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Vorgaenge.Models.FilterListVorgangV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Vorgaenge.Models.ListVorgangV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Vorgaenge/{vorgangUid}/Leistungsaufstellung": {
      "get": {
        "tags": [
          "Vorgaenge"
        ],
        "summary": "Gibt Leistungsaufstellung zu einem Vorgang zurück",
        "operationId": "VorgaengeV1_Leistungsaufstellung",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "vorgangUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.LeistungsaufstellungV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Vorgaenge/LeistungsaufstellungenSuche": {
      "post": {
        "tags": [
          "Vorgaenge"
        ],
        "summary": "Gibt alle Leistungsaufstellung zurück",
        "operationId": "VorgaengeV1_LeistungsaufstellungSuche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Vorgaenge.Models.FilterListLeistungsaufstellungV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Vorgaenge.Models.ListLeistungsaufstellungV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Vorgaenge/{vorgangUid}/Anpassung": {
      "get": {
        "tags": [
          "Vorgaenge"
        ],
        "summary": "Gibt Anpassungsdaten zu einem Vorgang zurück",
        "operationId": "VorgaengeV1_Anpassung",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "vorgangUid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.AnpassungV1"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/Vorgaenge/Abbrueche/Suche": {
      "post": {
        "tags": [
          "Vorgaenge"
        ],
        "summary": "Durchsucht alle abgebrochenen Vorläufe",
        "operationId": "VorgaengeV1_Abbrueche",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsegoApi.SearchParameterWithOrderBy[AsegoApi.Vorgaenge.Models.FilterVorgangAbbruchV1]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsegoApi.ListResultResponse[AsegoApi.Vorgaenge.Models.VorgangAbbruchV1]"
            }
          },
          "401": {
            "description": "Unauthorized - Not Authorized, Account locked or Password changed"
          },
          "403": {
            "description": "MaxQueries exceeded"
          },
          "410": {
            "description": "Granted rights changed, need reauth"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Executes login and returns access token",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "grant_type",
            "in": "formData",
            "required": true,
            "type": "string",
            "default": "password"
          },
          {
            "name": "username",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tokeninfo"
          },
          "400": {
            "description": "Benutzer oder Passwort falsch"
          }
        }
      }
    }
  },
  "definitions": {
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Artikel.Models.FilterArtikelV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Artikel.Models.FilterArtikelV1"
        }
      }
    },
    "AsegoApi.OrderItem": {
      "required": [
        "Desc"
      ],
      "type": "object",
      "properties": {
        "FieldName": {
          "type": "string"
        },
        "Desc": {
          "description": "Whether to sort Descending or Ascening (default)",
          "type": "boolean"
        }
      }
    },
    "AsegoApi.ListParameter": {
      "type": "object",
      "properties": {
        "searchToken": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "pageIndex": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AsegoApi.Artikel.Models.FilterArtikelV1": {
      "description": "Suchkriterien für die Suche nach Artikeln",
      "type": "object",
      "properties": {
        "AuchGeloeschteUndInaktive": {
          "description": "Standardmäßig werden Gelöschte und Inaktive nicht mit ausgegeben",
          "type": "boolean"
        },
        "Inst": {
          "description": "Die Filialen in denen Gesucht werden soll, leer  = alle, oder Verknüft",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ArtikelAttribute": {
          "description": "Attribute die der Artikel erfüllen muss. UND Verknüpft",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Artikel.Services.IArtikelAttributeV1"
          }
        },
        "Warengruppe": {
          "description": "ID der Warengruppen ODER-Verknüpft",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Klassifizierung": {
          "description": "ID der Klassifizierung ODER-Verknüpft",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ArtikelGruppe": {
          "description": "ID der ArtikelGruppe ODER-Verknüpft",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uid": {
          "description": "Eindeutige ID des Artikels",
          "type": "string"
        },
        "Suchbegriff": {
          "description": "Suchbegriff des Artikel",
          "type": "string"
        },
        "Bezeichnung": {
          "description": "Bezeichnung des Artikels",
          "type": "string"
        },
        "HmvNr": {
          "description": "HMV Nr des Artikels",
          "type": "string"
        },
        "ArtikelNr": {
          "description": "ArtikelNr",
          "type": "string"
        }
      }
    },
    "AsegoApi.Artikel.Services.IArtikelAttributeV1": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "AnzeigeText": {
          "type": "string"
        },
        "Typ": {
          "type": "string"
        },
        "Wert": {
          "type": "object"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Artikel.Models.ListArtikelV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Artikel.Models.ListArtikelV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultCount": {
      "required": [
        "currentPageIndex",
        "numberOfPages",
        "results"
      ],
      "type": "object",
      "properties": {
        "currentPageIndex": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "type": "integer"
        },
        "searchToken": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "results": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AsegoApi.Artikel.Models.ListArtikelV1": {
      "description": "Return Class für die Suche von Artikel",
      "required": [
        "uid"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "description": "Eindeutige ID des Artikels",
          "type": "string"
        },
        "Suchbegriff": {
          "description": "Suchbegriff des Artikel",
          "type": "string"
        },
        "Bezeichnung": {
          "description": "Bezeichnung des Artikels",
          "type": "string"
        },
        "HmvNr": {
          "description": "HMV Nr des Artikels",
          "type": "string"
        },
        "ArtikelNr": {
          "description": "ArtikelNr",
          "type": "string"
        },
        "Warengruppe": {
          "description": "ID der Warengruppe\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Warengruppen\">(/v1/Keys/Warengruppen)</see>",
          "type": "string"
        },
        "Klassifizierung": {
          "type": "string"
        },
        "ArtikelGruppe": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Artikel.Models.ArtikelV1": {
      "description": "Return Class für die Details eines Artikels",
      "required": [
        "uid",
        "LagerArtikel",
        "SerNr",
        "SperreVerkauf",
        "Kernsortiment",
        "GeloeschtOrInaktiv"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Bezeichnung": {
          "type": "string"
        },
        "Warengruppe": {
          "description": "ID der Warengruppe\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Warengruppen\">(/v1/Keys/Warengruppen)</see>",
          "type": "string"
        },
        "Suchbegriff": {
          "type": "string"
        },
        "HmvNr": {
          "type": "string"
        },
        "ArtikelNr": {
          "type": "string"
        },
        "Klassifizierung": {
          "description": "ID der Klassifizierung\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Klassifizierungen\">(/v1/Keys/Klassifizierungen)</see>",
          "type": "string"
        },
        "ArtikelGruppe": {
          "description": "ID der ArtikelGruppe\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.ArtikelGruppen\">(/v1/Keys/ArtikelGruppen)</see>",
          "type": "string"
        },
        "LagerArtikel": {
          "type": "boolean"
        },
        "Barcodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "BilderUids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SerNr": {
          "type": "boolean"
        },
        "Beschreibung": {
          "type": "string"
        },
        "BatterieTyp": {
          "description": "ID des BatterieTyps\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.BatterieTypen\">(/v1/Keys/BatterieTypen)</see>",
          "type": "string"
        },
        "Rechnungstext": {
          "type": "string"
        },
        "SperreVerkauf": {
          "type": "boolean"
        },
        "Kernsortiment": {
          "type": "boolean"
        },
        "GeloeschtOrInaktiv": {
          "type": "boolean"
        },
        "Attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Artikel.Models.ArtikelAttributeV1"
          }
        },
        "LieferntenIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AsegoApi.Artikel.Models.ArtikelAttributeV1": {
      "required": [
        "uid"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "AnzeigeText": {
          "type": "string"
        },
        "Typ": {
          "type": "string"
        },
        "Wert": {
          "type": "object"
        }
      }
    },
    "AsegoApi.Artikel.Models.ArtikelLagerbestandV1": {
      "required": [
        "Bestand"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Bestand": {
          "format": "int32",
          "type": "integer"
        },
        "Inst": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Artikel.Models.ArtikelPreiseV1": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "PreisErmaessigterSteuersatz": {
          "format": "double",
          "type": "number"
        },
        "PreisErhoehterSteuersatz": {
          "format": "double",
          "type": "number"
        },
        "PreisNetto": {
          "format": "double",
          "type": "number"
        },
        "Inst": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Artikel.Models.ArtikelLieferantV1": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "EkPreis": {
          "format": "double",
          "description": "Dieses Feld wird nur gefüllt, wenn das Recht \"EKPreiseLesen\" Vorhanden ist.",
          "type": "number"
        },
        "Grundrabatt": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Arzt.Models.FilterArztV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Arzt.Models.FilterArztV1"
        }
      }
    },
    "AsegoApi.Arzt.Models.FilterArztV1": {
      "description": "Suchkriterien für die Suche nach Ärzten",
      "type": "object",
      "properties": {
        "AuchInaktive": {
          "description": "Standardmäßig werden Inaktive nicht mit ausgegeben",
          "type": "boolean"
        },
        "Inaktiv": {
          "type": "boolean"
        },
        "uid": {
          "description": "Eindeutige ID der Ärzte",
          "type": "string"
        },
        "Suchbegriff": {
          "description": "Suchbegriff der Ärzte",
          "type": "string"
        },
        "Art": {
          "description": "ID der Arzt Art\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.ArztArt\">(/v1/Keys/ArztArt)</see>",
          "type": "string"
        },
        "PraxisName": {
          "description": "PraxisName der Ärzte",
          "type": "string"
        },
        "Anrede": {
          "description": "Anrede der Ärzte",
          "type": "string"
        },
        "Vorname": {
          "description": "Vorname der Ärzte",
          "type": "string"
        },
        "Nachname": {
          "description": "Nachname der Ärzte",
          "type": "string"
        },
        "Strasse": {
          "description": "Strasse der Ärzte",
          "type": "string"
        },
        "Plz": {
          "description": "Plz der Ärzte",
          "type": "string"
        },
        "Ort": {
          "description": "Ort der Ärzte",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer der Ärzte",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer der Ärzte",
          "type": "string"
        },
        "Handy": {
          "description": "Handynummer der Ärzte",
          "type": "string"
        },
        "Webseite": {
          "description": "Webseite der Ärzte",
          "type": "string"
        },
        "Arztnummer": {
          "description": "Arztnummer der Ärzte",
          "type": "string"
        },
        "Betriebsstaettennummer": {
          "description": "Betriebsstaettennummer der Ärzte",
          "type": "string"
        },
        "Fachgebiet": {
          "description": "Fachgebiete der Ärzte",
          "type": "string"
        },
        "Typ": {
          "format": "int32",
          "description": "Typ der Ärzte [0 = Keiner, 1 = HNO, 2 = Augen, 4 = Haus] ",
          "enum": [
            0,
            1,
            2,
            4
          ],
          "type": "integer"
        },
        "Ohrenarzt": {
          "description": "Typ der Ärzte",
          "type": "boolean"
        },
        "Augenarzt": {
          "description": "Typ der Ärzte",
          "type": "boolean"
        },
        "Hausarzt": {
          "description": "Typ der Ärzte",
          "type": "boolean"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Arzt.Models.ListArztV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Arzt.Models.ListArztV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Arzt.Models.ListArztV1": {
      "description": "Return Class für die Suche eines Arztes",
      "required": [
        "uid",
        "Typ",
        "Ohrenarzt",
        "Augenarzt",
        "Hausarzt"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "description": "Eindeutige ID der Ärzte",
          "type": "string"
        },
        "Suchbegriff": {
          "description": "Suchbegriff der Ärzte",
          "type": "string"
        },
        "Art": {
          "description": "ID der Arzt Art\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.ArztArt\">(/v1/Keys/ArztArt)</see>",
          "type": "string"
        },
        "PraxisName": {
          "description": "PraxisName der Ärzte",
          "type": "string"
        },
        "Anrede": {
          "description": "Anrede der Ärzte",
          "type": "string"
        },
        "Vorname": {
          "description": "Vorname der Ärzte",
          "type": "string"
        },
        "Nachname": {
          "description": "Nachname der Ärzte",
          "type": "string"
        },
        "Strasse": {
          "description": "Strasse der Ärzte",
          "type": "string"
        },
        "Plz": {
          "description": "Plz der Ärzte",
          "type": "string"
        },
        "Ort": {
          "description": "Ort der Ärzte",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer der Ärzte",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer der Ärzte",
          "type": "string"
        },
        "Handy": {
          "description": "Handynummer der Ärzte",
          "type": "string"
        },
        "Webseite": {
          "description": "Webseite der Ärzte",
          "type": "string"
        },
        "Arztnummer": {
          "description": "Arztnummer der Ärzte",
          "type": "string"
        },
        "Betriebsstaettennummer": {
          "description": "Betriebsstaettennummer der Ärzte",
          "type": "string"
        },
        "Fachgebiet": {
          "description": "Fachgebiete der Ärzte",
          "type": "string"
        },
        "Typ": {
          "format": "int32",
          "description": "Typ der Ärzte [0 = Keiner, 1 = HNO, 2 = Augen, 4 = Haus] ",
          "enum": [
            0,
            1,
            2,
            4
          ],
          "type": "integer"
        },
        "Ohrenarzt": {
          "description": "Typ der Ärzte",
          "type": "boolean"
        },
        "Augenarzt": {
          "description": "Typ der Ärzte",
          "type": "boolean"
        },
        "Hausarzt": {
          "description": "Typ der Ärzte",
          "type": "boolean"
        }
      }
    },
    "AsegoApi.Arzt.Models.ArztV1": {
      "description": "Return Class für die Details eines Arztes",
      "required": [
        "uid",
        "Typ",
        "Ohrenarzt",
        "Hausarzt",
        "Augenarzt",
        "Inaktiv"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Suchbegriff": {
          "type": "string"
        },
        "Art": {
          "type": "string"
        },
        "PraxisName": {
          "type": "string"
        },
        "Anrede": {
          "type": "string"
        },
        "Vorname": {
          "type": "string"
        },
        "Nachname": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Handy": {
          "type": "string"
        },
        "Webseite": {
          "type": "string"
        },
        "Arztnummer": {
          "type": "string"
        },
        "Betriebsstaettennummer": {
          "type": "string"
        },
        "Fachgebiet": {
          "type": "string"
        },
        "Typ": {
          "format": "int32",
          "description": " [0 = Keiner, 1 = HNO, 2 = Augen, 4 = Haus] ",
          "enum": [
            0,
            1,
            2,
            4
          ],
          "type": "integer"
        },
        "Ohrenarzt": {
          "type": "boolean"
        },
        "Hausarzt": {
          "type": "boolean"
        },
        "Augenarzt": {
          "type": "boolean"
        },
        "Inaktiv": {
          "type": "boolean"
        }
      }
    },
    "AsegoApi.Arzt.Models.ArztEditV1": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Suchbegriff": {
          "type": "string"
        },
        "Art": {
          "description": "Siehe GET /v1/Keys/ArztArt",
          "type": "string"
        },
        "PraxisName": {
          "type": "string"
        },
        "Anrede": {
          "description": "Siehe GET /v1/Keys/Anreden",
          "type": "string"
        },
        "Vorname": {
          "type": "string"
        },
        "Nachname": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Handy": {
          "type": "string"
        },
        "Webseite": {
          "type": "string"
        },
        "Arztnummer": {
          "type": "string"
        },
        "Betriebsstaettennummer": {
          "type": "string"
        },
        "Fachgebiet": {
          "type": "string"
        },
        "Ohrenarzt": {
          "type": "boolean"
        },
        "Hausarzt": {
          "type": "boolean"
        },
        "Augenarzt": {
          "type": "boolean"
        },
        "Inaktiv": {
          "type": "boolean"
        }
      }
    },
    "AsegoApi.Arzt.Models.ArztCreateV1": {
      "required": [
        "PraxisName",
        "Vorname",
        "Nachname"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Suchbegriff": {
          "type": "string"
        },
        "Art": {
          "description": "Siehe GET /v1/Keys/ArztArt",
          "type": "string"
        },
        "PraxisName": {
          "type": "string"
        },
        "Anrede": {
          "description": "Siehe GET /v1/Keys/Anreden",
          "type": "string"
        },
        "Vorname": {
          "type": "string"
        },
        "Nachname": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Handy": {
          "type": "string"
        },
        "Webseite": {
          "type": "string"
        },
        "Arztnummer": {
          "type": "string"
        },
        "Betriebsstaettennummer": {
          "type": "string"
        },
        "Fachgebiet": {
          "type": "string"
        },
        "Ohrenarzt": {
          "type": "boolean"
        },
        "Hausarzt": {
          "type": "boolean"
        },
        "Augenarzt": {
          "type": "boolean"
        },
        "Inaktiv": {
          "type": "boolean"
        }
      }
    },
    "AsegoApi.CreatedElementResponse": {
      "type": "object",
      "properties": {
        "createdUid": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Audiogramm.FilterAudiogrammSammlungV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Audiogramm.FilterAudiogrammSammlungV1"
        }
      }
    },
    "AsegoApi.Audiogramm.FilterAudiogrammSammlungV1": {
      "type": "object",
      "properties": {
        "KundenUid": {
          "type": "string"
        },
        "Ton": {
          "type": "boolean"
        },
        "Sprache": {
          "type": "boolean"
        },
        "Datum": {
          "format": "date-time",
          "type": "string"
        },
        "Beschreibung": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "Tone": {
          "type": "boolean"
        },
        "Speech": {
          "type": "boolean"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Audiogramm.ListAudiogrammV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Audiogramm.ListAudiogrammV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Audiogramm.ListAudiogrammV1": {
      "required": [
        "Datum",
        "uid",
        "Tone",
        "Speech"
      ],
      "type": "object",
      "properties": {
        "Datum": {
          "format": "date-time",
          "type": "string"
        },
        "Beschreibung": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "Tone": {
          "type": "boolean"
        },
        "Speech": {
          "type": "boolean"
        }
      }
    },
    "AsegoApi.Audiogramm.AudiogrammSpracheV1": {
      "required": [
        "Typ",
        "Manuell",
        "Ohr",
        "Messungen",
        "uid",
        "Datum"
      ],
      "type": "object",
      "properties": {
        "KundeUid": {
          "type": "string"
        },
        "ParentUid": {
          "type": "string"
        },
        "Beschreibung": {
          "type": "string"
        },
        "Typ": {
          "type": "string"
        },
        "Manuell": {
          "type": "boolean"
        },
        "Ohr": {
          "type": "string"
        },
        "Messungen": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asego.WebApps.Audiogramm.Messung"
          }
        },
        "uid": {
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Asego.WebApps.Audiogramm.Messung": {
      "required": [
        "Wert",
        "Ergebnis"
      ],
      "type": "object",
      "properties": {
        "Wert": {
          "format": "int32",
          "description": "Je nach Audiogramm (Ton / Sprache) Frequenz oder Dezibel",
          "type": "integer"
        },
        "Ergebnis": {
          "format": "int32",
          "description": "Prozent",
          "type": "integer"
        },
        "Typ": {
          "description": "keineVertaeubung\r\nkeineAntwort\r\nnichtMessbar\r\nVertaeubung\r\nVertaeubungKeinAntwort\r\nVertaeubungNichtMessbar",
          "type": "string"
        }
      }
    },
    "AsegoApi.Audiogramm.AudiogrammTonV1": {
      "required": [
        "Typ",
        "Manuell",
        "Ohr",
        "Messungen",
        "uid",
        "Datum"
      ],
      "type": "object",
      "properties": {
        "KundeUid": {
          "type": "string"
        },
        "ParentUid": {
          "type": "string"
        },
        "Beschreibung": {
          "type": "string"
        },
        "Typ": {
          "type": "string"
        },
        "Manuell": {
          "type": "boolean"
        },
        "Ohr": {
          "type": "string"
        },
        "Messungen": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asego.WebApps.Audiogramm.Messung"
          }
        },
        "uid": {
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AsegoApi.Audiogramm.AudiogrammV1Controller.CreateNewAudiogrammTonV1": {
      "required": [
        "Typ",
        "Manuell",
        "Ohr",
        "Datum"
      ],
      "type": "object",
      "properties": {
        "Typ": {
          "format": "int32",
          "description": "Typ des Audiogramms: [0 = HV_FF, 1 = HV_FF1, 2 = HV_FF2, 3 = HV_KL, 4 = HV_LL, 5 = MCL_FF, 6 = MCL_FF1, 7 = MCL_FF2, 8 = MCL_KL, 9 = MCL_LL, 10 = UCL_FF, 11 = UCL_FF1, 12 = UCL_FF2, 13 = UCL_KL, 14 = UCL_LL] ",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14
          ],
          "type": "integer"
        },
        "ParentUid": {
          "description": "GUID: Zusammenfassung mehrerer Audiogrammkurven zu einer Messung. Wir diese leergelassen, wird eine neue UID generiert",
          "type": "string"
        },
        "Beschreibung": {
          "description": "Bezeichnung (der Parent Messung)",
          "type": "string"
        },
        "Manuell": {
          "description": "Handelt es sich um ein manuell angelegtes Audiogramm?",
          "type": "boolean"
        },
        "Ohr": {
          "format": "int32",
          "description": "Die Ohrseite: [0 = L, 1 = R, 2 = N, 3 = B] ",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "Messungen": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Audiogramm.AudiogrammV1Controller.CreateNewAudiogrammV1.MessungApi"
          }
        },
        "Datum": {
          "format": "date-time",
          "description": "Datum der Messung",
          "type": "string"
        }
      }
    },
    "AsegoApi.Audiogramm.AudiogrammV1Controller.CreateNewAudiogrammV1.MessungApi": {
      "required": [
        "Wert",
        "Ergebnis",
        "Typ"
      ],
      "type": "object",
      "properties": {
        "Wert": {
          "format": "int32",
          "description": "Je nach Audiogramm (Ton / Sprache) Frequenz oder Dezibel",
          "type": "integer"
        },
        "Ergebnis": {
          "format": "int32",
          "description": "Prozent",
          "type": "integer"
        },
        "Typ": {
          "format": "int32",
          "description": "Der Typ der Messung [0 = keineVertaeubung, 1 = keineAntwort, 2 = nichtMessbar, 3 = Vertaeubung, 4 = VertaeubungKeinAntwort, 5 = VertaeubungNichtMessbar] ",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        }
      }
    },
    "AsegoApi.Audiogramm.AudiogrammV1Controller.CreateNewAudiogrammSpeechV1": {
      "required": [
        "Typ",
        "Manuell",
        "Ohr",
        "Datum"
      ],
      "type": "object",
      "properties": {
        "Typ": {
          "format": "int32",
          "description": "Typ des Audiogramms: HV_FF, ... [0 = DV_FF, 1 = DV_FF1, 2 = DV_FF2, 3 = DV_KL, 4 = DV_LL, 5 = HV_FF, 6 = HV_FF1, 7 = HV_FF2, 8 = HV_KL, 9 = HV_LL, 10 = MCL_FF, 11 = MCL_FF1, 12 = MCL_FF2, 13 = MCL_KL, 14 = MCL_LL, 15 = UCL_FF, 16 = UCL_FF1, 17 = UCL_FF2, 18 = UCL_KL, 19 = UCL_LL] ",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ],
          "type": "integer"
        },
        "ParentUid": {
          "description": "GUID: Zusammenfassung mehrerer Audiogrammkurven zu einer Messung. Wir diese leergelassen, wird eine neue UID generiert",
          "type": "string"
        },
        "Beschreibung": {
          "description": "Bezeichnung (der Parent Messung)",
          "type": "string"
        },
        "Manuell": {
          "description": "Handelt es sich um ein manuell angelegtes Audiogramm?",
          "type": "boolean"
        },
        "Ohr": {
          "format": "int32",
          "description": "Die Ohrseite: [0 = L, 1 = R, 2 = N, 3 = B] ",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "Messungen": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Audiogramm.AudiogrammV1Controller.CreateNewAudiogrammV1.MessungApi"
          }
        },
        "Datum": {
          "format": "date-time",
          "description": "Datum der Messung",
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Auftragseingang.Models.FilterREAAuftragseingangV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Auftragseingang.Models.FilterREAAuftragseingangV1"
        }
      }
    },
    "AsegoApi.Auftragseingang.Models.FilterREAAuftragseingangV1": {
      "type": "object",
      "properties": {
        "DatumAb": {
          "format": "date-time",
          "type": "string"
        },
        "GeraeteID": {
          "description": "Geräte ID der Auftragseingänge",
          "type": "string"
        },
        "uid": {
          "description": "Eindeutige ID der Auftragseingänge",
          "type": "string"
        },
        "VorgangID": {
          "description": "VorgangID der Auftragseingänge",
          "type": "string"
        },
        "Vorgangsnummer": {
          "format": "double",
          "description": "Vorgangsnummer der Auftragseingänge",
          "type": "number"
        },
        "Datum": {
          "format": "date-time",
          "description": "Datum der Auftragseingänge",
          "type": "string"
        },
        "Eingegangen": {
          "description": "Eingegangen Ja oder Nein der Auftragseingänge",
          "type": "boolean"
        },
        "EingegangenDatum": {
          "format": "date-time",
          "description": "Eingegangen Datum der Auftragseingänge",
          "type": "string"
        },
        "LieferantenID": {
          "description": "Lieferanten ID der Auftragseingänge",
          "type": "string"
        },
        "KundenID": {
          "description": "Kunden ID der Auftragseingänge",
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Auftragseingang.Models.ListREAAuftragseingangV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Auftragseingang.Models.ListREAAuftragseingangV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Auftragseingang.Models.ListREAAuftragseingangV1": {
      "description": "REA",
      "required": [
        "uid",
        "Vorgangsnummer",
        "Eingegangen"
      ],
      "type": "object",
      "properties": {
        "GeraeteID": {
          "description": "Geräte ID der Auftragseingänge",
          "type": "string"
        },
        "uid": {
          "description": "Eindeutige ID der Auftragseingänge",
          "type": "string"
        },
        "VorgangID": {
          "description": "VorgangID der Auftragseingänge",
          "type": "string"
        },
        "Vorgangsnummer": {
          "format": "double",
          "description": "Vorgangsnummer der Auftragseingänge",
          "type": "number"
        },
        "Datum": {
          "format": "date-time",
          "description": "Datum der Auftragseingänge",
          "type": "string"
        },
        "Eingegangen": {
          "description": "Eingegangen Ja oder Nein der Auftragseingänge",
          "type": "boolean"
        },
        "EingegangenDatum": {
          "format": "date-time",
          "description": "Eingegangen Datum der Auftragseingänge",
          "type": "string"
        },
        "LieferantenID": {
          "description": "Lieferanten ID der Auftragseingänge",
          "type": "string"
        },
        "KundenID": {
          "description": "Kunden ID der Auftragseingänge",
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Auftragseingang.Models.FilterOTAAuftragseingangV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Auftragseingang.Models.FilterOTAAuftragseingangV1"
        }
      }
    },
    "AsegoApi.Auftragseingang.Models.FilterOTAAuftragseingangV1": {
      "type": "object",
      "properties": {
        "DatumAb": {
          "format": "date-time",
          "type": "string"
        },
        "FormR": {
          "type": "string"
        },
        "FormL": {
          "type": "string"
        },
        "uid": {
          "description": "Eindeutige ID der Auftragseingänge",
          "type": "string"
        },
        "VorgangID": {
          "description": "VorgangID der Auftragseingänge",
          "type": "string"
        },
        "Vorgangsnummer": {
          "format": "double",
          "description": "Vorgangsnummer der Auftragseingänge",
          "type": "number"
        },
        "Datum": {
          "format": "date-time",
          "description": "Datum der Auftragseingänge",
          "type": "string"
        },
        "Eingegangen": {
          "description": "Eingegangen Ja oder Nein der Auftragseingänge",
          "type": "boolean"
        },
        "EingegangenDatum": {
          "format": "date-time",
          "description": "Eingegangen Datum der Auftragseingänge",
          "type": "string"
        },
        "LieferantenID": {
          "description": "Lieferanten ID der Auftragseingänge",
          "type": "string"
        },
        "KundenID": {
          "description": "Kunden ID der Auftragseingänge",
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Auftragseingang.Models.ListOTAAuftragseingangV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Auftragseingang.Models.ListOTAAuftragseingangV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Auftragseingang.Models.ListOTAAuftragseingangV1": {
      "description": "OTA",
      "required": [
        "uid",
        "Vorgangsnummer",
        "Eingegangen"
      ],
      "type": "object",
      "properties": {
        "FormR": {
          "type": "string"
        },
        "FormL": {
          "type": "string"
        },
        "uid": {
          "description": "Eindeutige ID der Auftragseingänge",
          "type": "string"
        },
        "VorgangID": {
          "description": "VorgangID der Auftragseingänge",
          "type": "string"
        },
        "Vorgangsnummer": {
          "format": "double",
          "description": "Vorgangsnummer der Auftragseingänge",
          "type": "number"
        },
        "Datum": {
          "format": "date-time",
          "description": "Datum der Auftragseingänge",
          "type": "string"
        },
        "Eingegangen": {
          "description": "Eingegangen Ja oder Nein der Auftragseingänge",
          "type": "boolean"
        },
        "EingegangenDatum": {
          "format": "date-time",
          "description": "Eingegangen Datum der Auftragseingänge",
          "type": "string"
        },
        "LieferantenID": {
          "description": "Lieferanten ID der Auftragseingänge",
          "type": "string"
        },
        "KundenID": {
          "description": "Kunden ID der Auftragseingänge",
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Benutzer.Models.FilterBenutzerV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Benutzer.Models.FilterBenutzerV1"
        }
      }
    },
    "AsegoApi.Benutzer.Models.FilterBenutzerV1": {
      "description": "Suchkriterien für die Suche nach Benutzern",
      "type": "object",
      "properties": {
        "AuchGesperrte": {
          "description": "Standardmäßig werden Gesperrte nicht mit ausgegeben",
          "type": "boolean"
        },
        "Gesperrt": {
          "type": "boolean"
        },
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Benutzer",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Kuerzel": {
          "description": "Kürzel der Benutzer",
          "type": "string"
        },
        "AnredeId": {
          "description": "ID der Anrede\r\n<see cref=\"!:KeysV1Controller.Anrede\">(/v1/Keys/Anrede)</see>",
          "type": "string"
        },
        "Vorname": {
          "description": "Vorname der Benutzer",
          "type": "string"
        },
        "Nachname": {
          "description": "Nachname der Benutzer",
          "type": "string"
        },
        "KorrespondenzName": {
          "description": "Korrespondenzname der Benutzer",
          "type": "string"
        },
        "Strasse": {
          "description": "Strasse der Benutzer",
          "type": "string"
        },
        "Plz": {
          "description": "Plz der Benutzer",
          "type": "string"
        },
        "Ort": {
          "description": "Ort der Benutzer",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer der Benutzer",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer der Benutzer",
          "type": "string"
        },
        "Handy": {
          "description": "Handynummer der Benutzer",
          "type": "string"
        },
        "Email": {
          "description": "Email der Benutzer",
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Benutzer.Models.ListBenutzerV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Benutzer.Models.ListBenutzerV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Benutzer.Models.ListBenutzerV1": {
      "description": "Return Class für die Suche einer Benutzer",
      "required": [
        "uid"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Benutzer",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Kuerzel": {
          "description": "Kürzel der Benutzer",
          "type": "string"
        },
        "AnredeId": {
          "description": "ID der Anrede\r\n<see cref=\"!:KeysV1Controller.Anrede\">(/v1/Keys/Anrede)</see>",
          "type": "string"
        },
        "Vorname": {
          "description": "Vorname der Benutzer",
          "type": "string"
        },
        "Nachname": {
          "description": "Nachname der Benutzer",
          "type": "string"
        },
        "KorrespondenzName": {
          "description": "Korrespondenzname der Benutzer",
          "type": "string"
        },
        "Strasse": {
          "description": "Strasse der Benutzer",
          "type": "string"
        },
        "Plz": {
          "description": "Plz der Benutzer",
          "type": "string"
        },
        "Ort": {
          "description": "Ort der Benutzer",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer der Benutzer",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer der Benutzer",
          "type": "string"
        },
        "Handy": {
          "description": "Handynummer der Benutzer",
          "type": "string"
        },
        "Email": {
          "description": "Email der Benutzer",
          "type": "string"
        }
      }
    },
    "AsegoApi.Benutzer.Models.BenutzerV1": {
      "description": "Return Class für die Details einer Benutzer",
      "required": [
        "uid",
        "Gesperrt"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Kuerzel": {
          "type": "string"
        },
        "Anrede": {
          "type": "string"
        },
        "Vorname": {
          "type": "string"
        },
        "Nachname": {
          "type": "string"
        },
        "KorrespondenzName": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Handy": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Gesperrt": {
          "type": "boolean"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Filiale.Models.FilterFilialeV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Filiale.Models.FilterFilialeV1"
        }
      }
    },
    "AsegoApi.Filiale.Models.FilterFilialeV1": {
      "description": "Suchkriterien für die Suche nach Filialen",
      "type": "object",
      "properties": {
        "Inst": {
          "description": "Die Filialen in denen Gesucht werden soll, leer  = alle, oder Verknüft",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uid": {
          "description": "Eindeutige ID der Filiale",
          "type": "string"
        },
        "Name": {
          "description": "Firmenbezeichnung",
          "type": "string"
        },
        "Strasse": {
          "description": "Straße",
          "type": "string"
        },
        "Plz": {
          "description": "Postleitzahl",
          "type": "string"
        },
        "Ort": {
          "description": "Ort",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer",
          "type": "string"
        },
        "Email": {
          "description": "Email",
          "type": "string"
        },
        "Webseite": {
          "description": "Webseite",
          "type": "string"
        },
        "Bundesland": {
          "description": "Bundesland",
          "type": "string"
        },
        "KalenderID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Filiale.Models.ListFilialeV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Filiale.Models.ListFilialeV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Filiale.Models.ListFilialeV1": {
      "description": "Return Class für die Suche einer Filiale",
      "required": [
        "uid"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "description": "Eindeutige ID der Filiale",
          "type": "string"
        },
        "Inst": {
          "description": "Inst",
          "type": "string"
        },
        "Name": {
          "description": "Firmenbezeichnung",
          "type": "string"
        },
        "Strasse": {
          "description": "Straße",
          "type": "string"
        },
        "Plz": {
          "description": "Postleitzahl",
          "type": "string"
        },
        "Ort": {
          "description": "Ort",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer",
          "type": "string"
        },
        "Email": {
          "description": "Email",
          "type": "string"
        },
        "Webseite": {
          "description": "Webseite",
          "type": "string"
        },
        "Bundesland": {
          "description": "Bundesland",
          "type": "string"
        },
        "KalenderID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "AsegoApi.Filiale.Models.FilialeV1": {
      "description": "Return Class für die Details einer Filiale",
      "required": [
        "uid"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Inst": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Webseite": {
          "type": "string"
        },
        "Bundesland": {
          "type": "string"
        },
        "KalenderID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Geraete.Models.FilterGeraeteV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Geraete.Models.FilterGeraeteV1"
        }
      }
    },
    "AsegoApi.Geraete.Models.FilterGeraeteV1": {
      "description": "Suchkriterien für die Suche nach Geräten",
      "type": "object",
      "properties": {
        "Datum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "LieferscheinDatum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "RueckgabeBis": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "ReserviertSeit": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "WareneingangAm": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "uid": {
          "description": "Eindeutige ID der Geräte",
          "type": "string"
        },
        "Suchbegriff": {
          "description": "Suchbegriff der Geräte",
          "type": "string"
        },
        "Bezeichnung": {
          "description": "Bezeichnung der Geräte",
          "type": "string"
        },
        "LieferantenID": {
          "description": "LieferantenID der Geräte",
          "type": "string"
        },
        "KundenID": {
          "description": "KundenID der Geräte",
          "type": "string"
        },
        "ArtikelID": {
          "description": "ArtikelID der Geräte",
          "type": "string"
        },
        "Seriennummer": {
          "description": "Seriennummer der Geräte",
          "type": "string"
        },
        "Modulnummer": {
          "description": "Modulnummer der Geräte",
          "type": "string"
        },
        "WareneingangsNummer": {
          "description": "Wareneingangsnummer der Geräte",
          "type": "string"
        },
        "Status": {
          "description": "ID des Geräte Status\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.GeraeteStatus\">(/v1/Keys/GeraeteStatus)</see>",
          "type": "string"
        },
        "LagerStatus": {
          "description": "ID des Lagerstatus\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.LagerStatus\">(/v1/Keys/LagerStatus)</see>",
          "type": "string"
        },
        "LieferscheinNr": {
          "description": "Lieferscheinnummer der Geräte",
          "type": "string"
        },
        "EkPreis": {
          "format": "double",
          "description": "EK-Preis der Geräte\r\nDieses Feld wird nur gefüllt, wenn das Recht \"EKPreiseLesen\" Vorhanden ist.",
          "type": "number"
        },
        "Inventurwert": {
          "format": "double",
          "description": "Inventurwert der Geräte",
          "type": "number"
        },
        "OhrSeite": {
          "description": "Ohrseite der Geräte",
          "type": "string"
        },
        "Batterietyp": {
          "description": "ID des Batterietyps\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.BatterieTypen\">(/v1/Keys/Batterietypen)</see>",
          "type": "string"
        },
        "Farbe": {
          "description": "ID der Farbe\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Farbe\">(/v1/Keys/Farbe)</see>",
          "type": "string"
        },
        "FremdGeraet": {
          "description": "Fremdgerät der Geräte",
          "type": "boolean"
        },
        "ReserviertZentrale": {
          "description": "Reserviert Zentrale Kennzeichen Geräte",
          "type": "boolean"
        },
        "Reserviert": {
          "description": "Reserviert Zentrale Kennzeichen der Geräte",
          "type": "boolean"
        },
        "ReserviertKundenID": {
          "description": "Reserviert für KundenID",
          "type": "string"
        },
        "ReserviertDurchKuerzel": {
          "description": "Reserviert durch Benutzer Kürzel",
          "type": "string"
        },
        "ReserviertDurchBenutzerID": {
          "description": "Reserviert durch BenutzerID",
          "type": "string"
        },
        "HmvNummer": {
          "description": "HmvNummer der Geräte",
          "type": "string"
        },
        "GeraeteWarengruppenID": {
          "description": "ID der Warengruppe\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Warengruppen\">(/v1/Keys/Farbe)</see>",
          "type": "string"
        }
      }
    },
    "Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]": {
      "description": "Für \"Equal\" Suche kann statt dem ganzen Objekt auch nur der Wert übergeben werden.\r\nz.B. || Status: 1  ||  statt  || Status: { Value: 1, Compare: \"Equal\"} ||",
      "required": [
        "Compare"
      ],
      "type": "object",
      "properties": {
        "Value": {
          "format": "date-time",
          "type": "string"
        },
        "Value2": {
          "format": "date-time",
          "description": "For CompareEqual:Between",
          "type": "string"
        },
        "Compare": {
          "description": " [0 = Equal, 1 = Not, 2 = Less, 3 = LessThan, 4 = Greater, 5 = GreaterThan, 6 = Like, 7 = Between] ",
          "enum": [
            "Equal",
            "Not",
            "Less",
            "LessThan",
            "Greater",
            "GreaterThan",
            "Like",
            "Between"
          ],
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Geraete.Models.ListGeraeteV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Geraete.Models.ListGeraeteV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Geraete.Models.ListGeraeteV1": {
      "description": "Return Class für die Suche der Geräte",
      "required": [
        "uid",
        "FremdGeraet",
        "ReserviertZentrale",
        "Reserviert"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "description": "Eindeutige ID der Geräte",
          "type": "string"
        },
        "Suchbegriff": {
          "description": "Suchbegriff der Geräte",
          "type": "string"
        },
        "Bezeichnung": {
          "description": "Bezeichnung der Geräte",
          "type": "string"
        },
        "LieferantenID": {
          "description": "LieferantenID der Geräte",
          "type": "string"
        },
        "KundenID": {
          "description": "KundenID der Geräte",
          "type": "string"
        },
        "ArtikelID": {
          "description": "ArtikelID der Geräte",
          "type": "string"
        },
        "Seriennummer": {
          "description": "Seriennummer der Geräte",
          "type": "string"
        },
        "Modulnummer": {
          "description": "Modulnummer der Geräte",
          "type": "string"
        },
        "WareneingangsNummer": {
          "description": "Wareneingangsnummer der Geräte",
          "type": "string"
        },
        "Status": {
          "description": "ID des Geräte Status\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.GeraeteStatus\">(/v1/Keys/GeraeteStatus)</see>",
          "type": "string"
        },
        "LagerStatus": {
          "description": "ID des Lagerstatus\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.LagerStatus\">(/v1/Keys/LagerStatus)</see>",
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "description": "Datum der Geräte",
          "type": "string"
        },
        "LieferscheinDatum": {
          "format": "date-time",
          "description": "Lieferschein Datum der Geräte",
          "type": "string"
        },
        "LieferscheinNr": {
          "description": "Lieferscheinnummer der Geräte",
          "type": "string"
        },
        "EkPreis": {
          "format": "double",
          "description": "EK-Preis der Geräte\r\nDieses Feld wird nur gefüllt, wenn das Recht \"EKPreiseLesen\" Vorhanden ist.",
          "type": "number"
        },
        "Inventurwert": {
          "format": "double",
          "description": "Inventurwert der Geräte",
          "type": "number"
        },
        "OhrSeite": {
          "description": "Ohrseite der Geräte",
          "type": "string"
        },
        "Batterietyp": {
          "description": "ID des Batterietyps\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.BatterieTypen\">(/v1/Keys/Batterietypen)</see>",
          "type": "string"
        },
        "Farbe": {
          "description": "ID der Farbe\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Farbe\">(/v1/Keys/Farbe)</see>",
          "type": "string"
        },
        "RueckgabeBis": {
          "format": "date-time",
          "description": "Rückgabe Bis der Geräte",
          "type": "string"
        },
        "FremdGeraet": {
          "description": "Fremdgerät der Geräte",
          "type": "boolean"
        },
        "WareneingangAm": {
          "format": "date-time",
          "description": "Wareneingang am der Geräte",
          "type": "string"
        },
        "ReserviertZentrale": {
          "description": "Reserviert Zentrale Kennzeichen Geräte",
          "type": "boolean"
        },
        "Reserviert": {
          "description": "Reserviert Zentrale Kennzeichen der Geräte",
          "type": "boolean"
        },
        "ReserviertSeit": {
          "format": "date-time",
          "description": "Reserviert Seit Datum der Geräte",
          "type": "string"
        },
        "ReserviertKundenID": {
          "description": "Reserviert für KundenID",
          "type": "string"
        },
        "ReserviertDurchKuerzel": {
          "description": "Reserviert durch Benutzer Kürzel",
          "type": "string"
        },
        "ReserviertDurchBenutzerID": {
          "description": "Reserviert durch BenutzerID",
          "type": "string"
        },
        "HmvNummer": {
          "description": "HmvNummer der Geräte",
          "type": "string"
        },
        "GeraeteWarengruppenID": {
          "description": "ID der Warengruppe\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Warengruppen\">(/v1/Keys/Farbe)</see>",
          "type": "string"
        }
      }
    },
    "AsegoApi.Geraete.Models.GeraeteV1": {
      "description": "Return Class für die Details eines Gerätes",
      "required": [
        "uid",
        "FremdGeraet",
        "ReserviertZentrale",
        "Reserviert"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Suchbegriff": {
          "type": "string"
        },
        "Bezeichnung": {
          "type": "string"
        },
        "LieferantenID": {
          "type": "string"
        },
        "KundenID": {
          "type": "string"
        },
        "ArtikelID": {
          "type": "string"
        },
        "Seriennummer": {
          "type": "string"
        },
        "Modulnummer": {
          "type": "string"
        },
        "WareneingangsNummer": {
          "type": "string"
        },
        "Status": {
          "description": "ID des Geräte Status\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.GeraeteStatus\">(/v1/Keys/GeraeteStatus)</see>",
          "type": "string"
        },
        "LagerStatus": {
          "description": "ID des Lagerstatus\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.LagerStatus\">(/v1/Keys/LagerStatus)</see>",
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "type": "string"
        },
        "LieferscheinDatum": {
          "format": "date-time",
          "type": "string"
        },
        "LieferscheinNr": {
          "type": "string"
        },
        "EkPreis": {
          "format": "double",
          "description": "Dieses Feld wird nur gefüllt, wenn das Recht \"EKPreiseLesen\" Vorhanden ist.",
          "type": "number"
        },
        "Inventurwert": {
          "format": "double",
          "type": "number"
        },
        "OhrSeite": {
          "type": "string"
        },
        "Batterietyp": {
          "description": "ID des Batterietyps\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.BatterieTypen\">(/v1/Keys/Batterietypen)</see>",
          "type": "string"
        },
        "Farbe": {
          "description": "ID der Farbe\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Farbe\">(/v1/Keys/Farbe)</see>",
          "type": "string"
        },
        "RueckgabeBis": {
          "format": "date-time",
          "type": "string"
        },
        "FremdGeraet": {
          "type": "boolean"
        },
        "WareneingangAm": {
          "format": "date-time",
          "type": "string"
        },
        "ReserviertZentrale": {
          "type": "boolean"
        },
        "Reserviert": {
          "type": "boolean"
        },
        "ReserviertSeit": {
          "format": "date-time",
          "type": "string"
        },
        "ReserviertKundenID": {
          "type": "string"
        },
        "ReserviertDurchKuerzel": {
          "type": "string"
        },
        "ReserviertDurchBenutzerID": {
          "type": "string"
        },
        "HmvNummer": {
          "type": "string"
        },
        "GeraeteWarengruppenID": {
          "description": "ID der Warengruppe\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Warengruppen\">(/v1/Keys/Farbe)</see>",
          "type": "string"
        }
      }
    },
    "AsegoApi.Info.InfoV1Controller.Kontingent": {
      "required": [
        "Count",
        "Limit"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Count": {
          "format": "int32",
          "type": "integer"
        },
        "Limit": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AsegoApi.Keys.KeysV1Controller.KeysV1": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Die ID des Keys",
          "type": "string"
        },
        "AnzeigeText": {
          "description": "Der AnzeigeText des Keys",
          "type": "string"
        }
      }
    },
    "AsegoApi.Keys.KeysV1Controller.KeysKundenSelektion": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Die ID der KundenSelektion",
          "type": "string"
        },
        "Bezeichnung": {
          "description": "Die Bezeichnung der KundenSelektion",
          "type": "string"
        },
        "Gruppenname": {
          "description": "Der Gruppenname der KundenSelektion",
          "type": "string"
        }
      }
    },
    "AsegoApi.Keys.KeysV1Controller.ArtikelAttributV1": {
      "type": "object",
      "properties": {
        "Typ": {
          "description": "Der Typ des Wertes des ArtikelAttributs.\r\nBoolean, String,...",
          "type": "string"
        },
        "Id": {
          "description": "Die ID des Keys",
          "type": "string"
        },
        "AnzeigeText": {
          "description": "Der AnzeigeText des Keys",
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Kostentraeger.Models.FilterKostentraegerV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Kostentraeger.Models.FilterKostentraegerV1"
        }
      }
    },
    "AsegoApi.Kostentraeger.Models.FilterKostentraegerV1": {
      "description": "Suchkriterien für die Suche nach Kostenträgern",
      "type": "object",
      "properties": {
        "AuchGeloeschte": {
          "description": "Standardmäßig werden Gelöschte nicht mit ausgegeben",
          "type": "boolean"
        },
        "Geloescht": {
          "type": "boolean"
        },
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Kostenträger",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Suchbegriff": {
          "description": "Suchbegriff der Kostenträger",
          "type": "string"
        },
        "IkNummer": {
          "description": "Ik Nummer der Kostenträger",
          "type": "string"
        },
        "Name": {
          "description": "Name der Kostenträger",
          "type": "string"
        },
        "Zusatz": {
          "description": "Zusatzname der Kostenträger",
          "type": "string"
        },
        "Strasse": {
          "description": "Straße der Kostenträger",
          "type": "string"
        },
        "Ort": {
          "description": "Ort der Kostenträger",
          "type": "string"
        },
        "Plz": {
          "description": "Plz der Kostenträger",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer der Kostenträger",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer der Kostenträger",
          "type": "string"
        },
        "Email": {
          "description": "Emailadresse der Kostenträger",
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Kostentraeger.Models.ListKostentraegerV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Kostentraeger.Models.ListKostentraegerV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Kostentraeger.Models.ListKostentraegerV1": {
      "description": "Return Class für die Suche eines Kostenträgers",
      "required": [
        "uid"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Kostenträger",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Suchbegriff": {
          "description": "Suchbegriff der Kostenträger",
          "type": "string"
        },
        "IkNummer": {
          "description": "Ik Nummer der Kostenträger",
          "type": "string"
        },
        "Name": {
          "description": "Name der Kostenträger",
          "type": "string"
        },
        "Zusatz": {
          "description": "Zusatzname der Kostenträger",
          "type": "string"
        },
        "Strasse": {
          "description": "Straße der Kostenträger",
          "type": "string"
        },
        "Ort": {
          "description": "Ort der Kostenträger",
          "type": "string"
        },
        "Plz": {
          "description": "Plz der Kostenträger",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer der Kostenträger",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer der Kostenträger",
          "type": "string"
        },
        "Email": {
          "description": "Emailadresse der Kostenträger",
          "type": "string"
        }
      }
    },
    "AsegoApi.Kostentraeger.Models.KostentraegerV1": {
      "description": "Return Class für die Details eines Kostenträgers",
      "required": [
        "uid",
        "Geloescht"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Suchbegriff": {
          "type": "string"
        },
        "IkNummer": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Zusatz": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Geloescht": {
          "type": "boolean"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Kunden.FilterKundenDokumentV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Kunden.FilterKundenDokumentV1"
        }
      }
    },
    "AsegoApi.Kunden.FilterKundenDokumentV1": {
      "required": [
        "Datum",
        "uid",
        "Dateiname"
      ],
      "type": "object",
      "properties": {
        "Benutzer": {
          "description": "Kürzel des Benutzer der das Dokument erstellt / zuletzt geändert hat.",
          "type": "string"
        },
        "Quelle": {
          "description": "Quelle: Freitext",
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "type": "string"
        },
        "MipArt": {
          "format": "int32",
          "type": "integer"
        },
        "ParentUid": {
          "type": "string"
        },
        "ART": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "Dateiname": {
          "type": "string"
        },
        "DateiGroesse": {
          "format": "int32",
          "type": "integer"
        },
        "DateiTyp": {
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Kunden.ListKundenDokumentV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Kunden.ListKundenDokumentV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Kunden.ListKundenDokumentV1": {
      "required": [
        "uid",
        "Dateiname",
        "Datum"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Dateiname": {
          "type": "string"
        },
        "DateiGroesse": {
          "format": "int32",
          "type": "integer"
        },
        "DateiTyp": {
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AsegoApi.Kunden.KundenDokumentDetailsV1": {
      "required": [
        "uid",
        "Dateiname",
        "DateiTyp",
        "Datum"
      ],
      "type": "object",
      "properties": {
        "Data": {
          "format": "byte",
          "description": "Binärdaten des Dokumentes",
          "type": "string"
        },
        "uid": {
          "description": "Uid des Dokumentes",
          "type": "string"
        },
        "Benutzer": {
          "description": "Kürzel des Benutzer der das Dokument erstellt / zuletzt geändert hat.",
          "type": "string"
        },
        "Quelle": {
          "description": "Quelle: Freitext",
          "type": "string"
        },
        "Bemerkung": {
          "description": "Bemerkung",
          "type": "string"
        },
        "Gruppe": {
          "description": "Zugeordnete Gruppe (Text)",
          "type": "string"
        },
        "Dateiname": {
          "description": "Dateiname des Dokumentes",
          "type": "string"
        },
        "DateiGroesse": {
          "format": "int32",
          "description": "Dateigröße in Bytes",
          "type": "integer"
        },
        "DateiTyp": {
          "description": "Dateiendung des Dokumentes",
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "description": "Erstell Datum des Dokumentes",
          "type": "string"
        },
        "ParentUid": {
          "type": "string"
        },
        "ART": {
          "type": "string"
        },
        "MipArt": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AsegoApi.Kunden.KundenDokumentCreateV1": {
      "required": [
        "Dateiname",
        "DateiTyp"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "ART": {
          "type": "string"
        },
        "Benutzer": {
          "type": "string"
        },
        "DateiGroesse": {
          "format": "int32",
          "type": "integer"
        },
        "ParentUid": {
          "type": "string"
        },
        "MipArt": {
          "format": "int32",
          "type": "integer"
        },
        "Quelle": {
          "description": "Quelle: Freitext",
          "type": "string"
        },
        "Bemerkung": {
          "description": "Bemerkung",
          "type": "string"
        },
        "Gruppe": {
          "description": "Zugeordnete Gruppe (Text)",
          "type": "string"
        },
        "Dateiname": {
          "description": "Dateiname des Dokumentes",
          "type": "string"
        },
        "DateiTyp": {
          "description": "Dateiendung des Dokumentes",
          "type": "string"
        },
        "Data": {
          "format": "byte",
          "description": "Base64String: Binärdaten des Dokumentes",
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "description": "Erstell Datum des Dokumentes",
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Kunden.Models.FilterKundenV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Kunden.Models.FilterKundenV1"
        }
      }
    },
    "AsegoApi.Kunden.Models.FilterKundenV1": {
      "description": "Suchkriterien für die Suche nach Kunden",
      "type": "object",
      "properties": {
        "Inst": {
          "description": "Die Filialen in denen Gesucht werden soll, leer  = alle, oder Verknüft",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelektionsKuerzelID": {
          "description": "SelektionsKuerzel nach denen alle Kunden gefiltert werden",
          "type": "string"
        },
        "LetzteAenderung": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "Erstellungsdatum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "uid": {
          "description": "Eindeutige ID der Kunden",
          "type": "string"
        },
        "Kundennummer": {
          "format": "int32",
          "description": "Kundennummer des Kunden",
          "type": "integer"
        },
        "AnredeID": {
          "description": "ID der Anrede\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Anreden\">(/v1/Keys/Anreden)</see>",
          "type": "string"
        },
        "TitelID": {
          "description": "ID des Titels\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Titel\">(/v1/Keys/Titel)</see>",
          "type": "string"
        },
        "Vorname": {
          "description": "Vorname des Kunden",
          "type": "string"
        },
        "Nachname": {
          "description": "Nachname des Kunden",
          "type": "string"
        },
        "Namenszusatz": {
          "description": "Namenszusatz des Kunden",
          "type": "string"
        },
        "Ordensname": {
          "description": "Ordensname des Kunden",
          "type": "string"
        },
        "Strasse": {
          "description": "Straße des Kunden",
          "type": "string"
        },
        "Plz": {
          "description": "Postleitzahl des Kunden",
          "type": "string"
        },
        "Ort": {
          "description": "Wohnort des Kunden",
          "type": "string"
        },
        "Land": {
          "description": "Land des Kunden (z.B. DEU)",
          "type": "string"
        },
        "Geburtsdatum": {
          "format": "date-time",
          "description": "Geburtsdatum des Kunden",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer des Kunden",
          "type": "string"
        },
        "Tel2": {
          "description": "Telefonnummer 2 des Kunden",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer des Kunden",
          "type": "string"
        },
        "Handy": {
          "description": "Handynummer des Kunden",
          "type": "string"
        },
        "Email": {
          "description": "Email des Kunden",
          "type": "string"
        },
        "Webseite": {
          "description": "Webseite des Kunden",
          "type": "string"
        },
        "KostentraegerID": {
          "description": "Kostenträger ID des Kunden",
          "type": "string"
        },
        "IKGesundheitskarte": {
          "description": "Kostenträger ID des Kunden",
          "type": "string"
        },
        "VersicherungsNummer": {
          "description": "Versicherungsnummer der Gesundheitskarte des Kunden",
          "type": "string"
        },
        "VersicherungsStatus": {
          "description": "Versicherungsstatus der Gesundheitskarte des Kunden",
          "type": "string"
        },
        "Aktenzeichen": {
          "description": "Aktenzeichen des Kunden",
          "type": "string"
        },
        "GueltigBis": {
          "format": "date-time",
          "description": "Gültigkeitsdatum der Gesundheitskarte des Kunden",
          "type": "string"
        },
        "PrivatVersichert": {
          "description": "Privat Versichert Status des Kunden",
          "type": "boolean"
        },
        "Beihilfe": {
          "description": "Beihilfe Status des Kunden",
          "type": "boolean"
        },
        "AnTaubheitGrenzend": {
          "description": "AnTaubheitGrenzend Status des Kunden",
          "type": "boolean"
        },
        "Zuzahlungsbefreit": {
          "description": "Zuzahlungsbefreit Status des Kunden",
          "type": "boolean"
        },
        "ZuzahlungsbefreitNein": {
          "description": "ZuzahlungsbefreitNein Status des Kunden",
          "type": "boolean"
        },
        "ZuzahlungsbefreitBis": {
          "format": "date-time",
          "description": "ZuzahlungsbefreitBis des Kunden",
          "type": "string"
        },
        "GesundheitskarteGueltigBis": {
          "format": "date-time",
          "description": "GesundheitskarteGueltigBis des Kunden",
          "type": "string"
        },
        "Werbung": {
          "description": "Werbung Status des Kunden",
          "type": "boolean"
        },
        "WerbungUnterschrieben": {
          "description": "WerbungUnterschrieben Status des Kunden",
          "type": "boolean"
        },
        "WerbungTelefon": {
          "description": "WerbungTelefon Status des Kunden",
          "type": "boolean"
        },
        "WerbungPost": {
          "description": "WerbungPost Status des Kunden",
          "type": "boolean"
        },
        "WerbungEmail": {
          "description": "WerbungEmail Status des Kunden",
          "type": "boolean"
        },
        "WerbungKeineGewuenscht": {
          "description": "WerbungKeineGewuenscht Status des Kunden",
          "type": "boolean"
        },
        "KeineWerbungDatum": {
          "format": "date-time",
          "description": "KeineWerbungDatum des Kunden",
          "type": "string"
        },
        "GrundKeineWerbung": {
          "format": "uuid",
          "description": "ID des Grundes (auch InaktivGrund)\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.InaktivGrund\">(/v1/Keys/InaktivGrund)</see>",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DatenschutzAusgehaendigt": {
          "description": "DatenschutzAusgehaendigt Status des Kunden",
          "type": "boolean"
        },
        "DataloggingUnterschrieben": {
          "description": "DataloggingUnterschrieben Status des Kunden",
          "type": "boolean"
        },
        "LetztesHoergeraetR": {
          "format": "date-time",
          "description": "LetztesHoergeraetR des Kunden",
          "type": "string"
        },
        "LetztesHoergeraetL": {
          "format": "date-time",
          "description": "LetztesHoergeraetL des Kunden",
          "type": "string"
        },
        "LetzterBesuch": {
          "format": "date-time",
          "description": "LetzterBesuch des Kunden",
          "type": "string"
        },
        "NaechsteKontrolle": {
          "format": "date-time",
          "description": "NaechsteKontrolle des Kunden",
          "type": "string"
        },
        "BetreuerAkustikKuerzel": {
          "description": "BetreuerAkustik des Kunden",
          "type": "string"
        },
        "BetreuerOptikKuerzel": {
          "description": "BetreuerOptik des Kunden",
          "type": "string"
        },
        "Info": {
          "description": "Info des Kunden",
          "type": "string"
        },
        "ZusatzInfo": {
          "description": "ZusatzInfo des Kunden",
          "type": "string"
        },
        "NeuKundenGrundID": {
          "description": "ID des Neukunden Grundes\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.NeuKundenGrund\">(/v1/Keys/NeuKundenGrund)</see>",
          "type": "string"
        },
        "Freifeld1": {
          "description": "Freifeld1 des Kunden",
          "type": "string"
        },
        "Freifeld2": {
          "description": "Freifeld2 des Kunden",
          "type": "string"
        },
        "Freifeld3": {
          "description": "Freifeld3 des Kunden",
          "type": "string"
        },
        "Freifeld4": {
          "description": "Freifeld4 des Kunden",
          "type": "string"
        },
        "Freifeld5": {
          "description": "Freifeld5 des Kunden",
          "type": "string"
        },
        "SMSTermin": {
          "description": "SMSTermin Status des Kunden",
          "type": "boolean"
        },
        "SMSAuftragseingang": {
          "description": "SMSAuftragseingang Status des Kunden",
          "type": "boolean"
        },
        "SMSMahnung": {
          "description": "SMSMahnung Status des Kunden",
          "type": "boolean"
        },
        "SMSRatenzahlung": {
          "description": "SMSRatenzahlung Status des Kunden",
          "type": "boolean"
        },
        "SMSKontrolle": {
          "description": "SMSKontrolle Status des Kunden",
          "type": "boolean"
        },
        "SMSWerbung": {
          "description": "SMSWerbung Status des Kunden",
          "type": "boolean"
        },
        "SMSBestellungWE": {
          "description": "SMSBestellungWE Status des Kunden",
          "type": "boolean"
        },
        "SMSKABewilligung": {
          "description": "SMSKABewilligung Status des Kunden",
          "type": "boolean"
        },
        "SMSGeburtstag": {
          "description": "SMSGeburtstag Status des Kunden",
          "type": "boolean"
        },
        "SMSKeineGewuenscht": {
          "description": "SMSKeineGewuenscht Status des Kunden",
          "type": "boolean"
        },
        "SMSHatKeinHandy": {
          "description": "SMSHatKeinHandy Status des Kunden",
          "type": "boolean"
        },
        "SMSBrilleAbholbereit": {
          "description": "SMSBrilleAbholbereit Status des Kunden",
          "type": "boolean"
        },
        "SMSWarenversand": {
          "description": "SMSWarenversand Status des Kunden",
          "type": "boolean"
        },
        "ArtDesKunden": {
          "description": "Art des Kunden",
          "type": "string"
        },
        "ArztHNOID": {
          "description": "ArztHNOID des Kunden",
          "type": "string"
        },
        "ArztHausID": {
          "description": "ArztHausID des Kunden",
          "type": "string"
        },
        "ArztAugenID": {
          "description": "ArztAugenID des Kunden",
          "type": "string"
        },
        "BetreuerID": {
          "description": "BetreuerID des Kunden",
          "type": "string"
        },
        "BetreuerOptikID": {
          "description": "BetreuerOptikID des Kunden",
          "type": "string"
        },
        "InaktivDatum": {
          "format": "date-time",
          "description": "Das Datum seit dem der Kunde inaktiv ist",
          "type": "string"
        },
        "GrundInaktiv": {
          "format": "uuid",
          "description": "ID des Inaktivgrundes\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.InaktivGrund\">(/v1/Keys/InaktivGrund)</see>",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Kunden.Models.ListKundenV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Kunden.Models.ListKundenV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Kunden.Models.ListKundenV1": {
      "description": "Return Class für die Suche nach Kunden",
      "required": [
        "uid",
        "Kundennummer",
        "PrivatVersichert",
        "Beihilfe",
        "AnTaubheitGrenzend",
        "Zuzahlungsbefreit",
        "ZuzahlungsbefreitNein",
        "Werbung",
        "WerbungUnterschrieben",
        "WerbungTelefon",
        "WerbungPost",
        "WerbungEmail",
        "WerbungKeineGewuenscht",
        "DatenschutzAusgehaendigt",
        "DataloggingUnterschrieben",
        "SMSTermin",
        "SMSAuftragseingang",
        "SMSMahnung",
        "SMSRatenzahlung",
        "SMSKontrolle",
        "SMSWerbung",
        "SMSBestellungWE",
        "SMSKABewilligung",
        "SMSGeburtstag",
        "SMSKeineGewuenscht",
        "SMSHatKeinHandy",
        "SMSBrilleAbholbereit",
        "SMSWarenversand"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "description": "Eindeutige ID der Kunden",
          "type": "string"
        },
        "Kundennummer": {
          "format": "int32",
          "description": "Kundennummer des Kunden",
          "type": "integer"
        },
        "AnredeID": {
          "description": "ID der Anrede\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Anreden\">(/v1/Keys/Anreden)</see>",
          "type": "string"
        },
        "TitelID": {
          "description": "ID des Titels\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Titel\">(/v1/Keys/Titel)</see>",
          "type": "string"
        },
        "Vorname": {
          "description": "Vorname des Kunden",
          "type": "string"
        },
        "Nachname": {
          "description": "Nachname des Kunden",
          "type": "string"
        },
        "Namenszusatz": {
          "description": "Namenszusatz des Kunden",
          "type": "string"
        },
        "Ordensname": {
          "description": "Ordensname des Kunden",
          "type": "string"
        },
        "Strasse": {
          "description": "Straße des Kunden",
          "type": "string"
        },
        "Plz": {
          "description": "Postleitzahl des Kunden",
          "type": "string"
        },
        "Ort": {
          "description": "Wohnort des Kunden",
          "type": "string"
        },
        "Land": {
          "description": "Land des Kunden (z.B. DEU)",
          "type": "string"
        },
        "Geburtsdatum": {
          "format": "date-time",
          "description": "Geburtsdatum des Kunden",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer des Kunden",
          "type": "string"
        },
        "Tel2": {
          "description": "Telefonnummer 2 des Kunden",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer des Kunden",
          "type": "string"
        },
        "Handy": {
          "description": "Handynummer des Kunden",
          "type": "string"
        },
        "Email": {
          "description": "Email des Kunden",
          "type": "string"
        },
        "Webseite": {
          "description": "Webseite des Kunden",
          "type": "string"
        },
        "KostentraegerID": {
          "description": "Kostenträger ID des Kunden",
          "type": "string"
        },
        "IKGesundheitskarte": {
          "description": "Kostenträger ID des Kunden",
          "type": "string"
        },
        "VersicherungsNummer": {
          "description": "Versicherungsnummer der Gesundheitskarte des Kunden",
          "type": "string"
        },
        "VersicherungsStatus": {
          "description": "Versicherungsstatus der Gesundheitskarte des Kunden",
          "type": "string"
        },
        "Aktenzeichen": {
          "description": "Aktenzeichen des Kunden",
          "type": "string"
        },
        "GueltigBis": {
          "format": "date-time",
          "description": "Gültigkeitsdatum der Gesundheitskarte des Kunden",
          "type": "string"
        },
        "PrivatVersichert": {
          "description": "Privat Versichert Status des Kunden",
          "type": "boolean"
        },
        "Beihilfe": {
          "description": "Beihilfe Status des Kunden",
          "type": "boolean"
        },
        "AnTaubheitGrenzend": {
          "description": "AnTaubheitGrenzend Status des Kunden",
          "type": "boolean"
        },
        "Zuzahlungsbefreit": {
          "description": "Zuzahlungsbefreit Status des Kunden",
          "type": "boolean"
        },
        "ZuzahlungsbefreitNein": {
          "description": "ZuzahlungsbefreitNein Status des Kunden",
          "type": "boolean"
        },
        "ZuzahlungsbefreitBis": {
          "format": "date-time",
          "description": "ZuzahlungsbefreitBis des Kunden",
          "type": "string"
        },
        "GesundheitskarteGueltigBis": {
          "format": "date-time",
          "description": "GesundheitskarteGueltigBis des Kunden",
          "type": "string"
        },
        "Erstellungsdatum": {
          "format": "date-time",
          "description": "Erstellungsdatum des Kunden",
          "type": "string"
        },
        "LetzteAenderung": {
          "format": "date-time",
          "description": "Änderungsdatum des Kunden",
          "type": "string"
        },
        "Werbung": {
          "description": "Werbung Status des Kunden",
          "type": "boolean"
        },
        "WerbungUnterschrieben": {
          "description": "WerbungUnterschrieben Status des Kunden",
          "type": "boolean"
        },
        "WerbungTelefon": {
          "description": "WerbungTelefon Status des Kunden",
          "type": "boolean"
        },
        "WerbungPost": {
          "description": "WerbungPost Status des Kunden",
          "type": "boolean"
        },
        "WerbungEmail": {
          "description": "WerbungEmail Status des Kunden",
          "type": "boolean"
        },
        "WerbungKeineGewuenscht": {
          "description": "WerbungKeineGewuenscht Status des Kunden",
          "type": "boolean"
        },
        "KeineWerbungDatum": {
          "format": "date-time",
          "description": "KeineWerbungDatum des Kunden",
          "type": "string"
        },
        "GrundKeineWerbung": {
          "format": "uuid",
          "description": "ID des Grundes (auch InaktivGrund)\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.InaktivGrund\">(/v1/Keys/InaktivGrund)</see>",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DatenschutzAusgehaendigt": {
          "description": "DatenschutzAusgehaendigt Status des Kunden",
          "type": "boolean"
        },
        "DataloggingUnterschrieben": {
          "description": "DataloggingUnterschrieben Status des Kunden",
          "type": "boolean"
        },
        "LetztesHoergeraetR": {
          "format": "date-time",
          "description": "LetztesHoergeraetR des Kunden",
          "type": "string"
        },
        "LetztesHoergeraetL": {
          "format": "date-time",
          "description": "LetztesHoergeraetL des Kunden",
          "type": "string"
        },
        "LetzterBesuch": {
          "format": "date-time",
          "description": "LetzterBesuch des Kunden",
          "type": "string"
        },
        "NaechsteKontrolle": {
          "format": "date-time",
          "description": "NaechsteKontrolle des Kunden",
          "type": "string"
        },
        "BetreuerAkustikKuerzel": {
          "description": "BetreuerAkustik des Kunden",
          "type": "string"
        },
        "BetreuerOptikKuerzel": {
          "description": "BetreuerOptik des Kunden",
          "type": "string"
        },
        "Info": {
          "description": "Info des Kunden",
          "type": "string"
        },
        "ZusatzInfo": {
          "description": "ZusatzInfo des Kunden",
          "type": "string"
        },
        "NeuKundenGrundID": {
          "description": "ID des Neukunden Grundes\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.NeuKundenGrund\">(/v1/Keys/NeuKundenGrund)</see>",
          "type": "string"
        },
        "Freifeld1": {
          "description": "Freifeld1 des Kunden",
          "type": "string"
        },
        "Freifeld2": {
          "description": "Freifeld2 des Kunden",
          "type": "string"
        },
        "Freifeld3": {
          "description": "Freifeld3 des Kunden",
          "type": "string"
        },
        "Freifeld4": {
          "description": "Freifeld4 des Kunden",
          "type": "string"
        },
        "Freifeld5": {
          "description": "Freifeld5 des Kunden",
          "type": "string"
        },
        "SMSTermin": {
          "description": "SMSTermin Status des Kunden",
          "type": "boolean"
        },
        "SMSAuftragseingang": {
          "description": "SMSAuftragseingang Status des Kunden",
          "type": "boolean"
        },
        "SMSMahnung": {
          "description": "SMSMahnung Status des Kunden",
          "type": "boolean"
        },
        "SMSRatenzahlung": {
          "description": "SMSRatenzahlung Status des Kunden",
          "type": "boolean"
        },
        "SMSKontrolle": {
          "description": "SMSKontrolle Status des Kunden",
          "type": "boolean"
        },
        "SMSWerbung": {
          "description": "SMSWerbung Status des Kunden",
          "type": "boolean"
        },
        "SMSBestellungWE": {
          "description": "SMSBestellungWE Status des Kunden",
          "type": "boolean"
        },
        "SMSKABewilligung": {
          "description": "SMSKABewilligung Status des Kunden",
          "type": "boolean"
        },
        "SMSGeburtstag": {
          "description": "SMSGeburtstag Status des Kunden",
          "type": "boolean"
        },
        "SMSKeineGewuenscht": {
          "description": "SMSKeineGewuenscht Status des Kunden",
          "type": "boolean"
        },
        "SMSHatKeinHandy": {
          "description": "SMSHatKeinHandy Status des Kunden",
          "type": "boolean"
        },
        "SMSBrilleAbholbereit": {
          "description": "SMSBrilleAbholbereit Status des Kunden",
          "type": "boolean"
        },
        "SMSWarenversand": {
          "description": "SMSWarenversand Status des Kunden",
          "type": "boolean"
        },
        "ArtDesKunden": {
          "description": "Art des Kunden",
          "type": "string"
        },
        "ArztHNOID": {
          "description": "ArztHNOID des Kunden",
          "type": "string"
        },
        "ArztHausID": {
          "description": "ArztHausID des Kunden",
          "type": "string"
        },
        "ArztAugenID": {
          "description": "ArztAugenID des Kunden",
          "type": "string"
        },
        "BetreuerID": {
          "description": "BetreuerID des Kunden",
          "type": "string"
        },
        "BetreuerOptikID": {
          "description": "BetreuerOptikID des Kunden",
          "type": "string"
        },
        "Inst": {
          "type": "string"
        },
        "InaktivDatum": {
          "format": "date-time",
          "description": "Das Datum seit dem der Kunde inaktiv ist",
          "type": "string"
        },
        "GrundInaktiv": {
          "format": "uuid",
          "description": "ID des Inaktivgrundes\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.InaktivGrund\">(/v1/Keys/InaktivGrund)</see>",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "AsegoApi.Kunden.Models.KundenV1": {
      "description": "Return Class für die Details eines Kunden",
      "required": [
        "uid",
        "Kundennummer",
        "PrivatVersichert",
        "Beihilfe",
        "AnTaubheitGrenzend",
        "Zuzahlungsbefreit",
        "ZuzahlungsbefreitNein",
        "Werbung",
        "WerbungUnterschrieben",
        "WerbungTelefon",
        "WerbungPost",
        "WerbungEmail",
        "WerbungKeineGewuenscht",
        "DatenschutzAusgehaendigt",
        "DataloggingUnterschrieben",
        "SMSTermin",
        "SMSAuftragseingang",
        "SMSMahnung",
        "SMSRatenzahlung",
        "SMSKontrolle",
        "SMSWerbung",
        "SMSBestellungWE",
        "SMSKABewilligung",
        "SMSGeburtstag",
        "SMSKeineGewuenscht",
        "SMSHatKeinHandy",
        "SMSBrilleAbholbereit",
        "SMSWarenversand"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Kundennummer": {
          "format": "int32",
          "type": "integer"
        },
        "TitelID": {
          "description": "ID des Titels\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Titel\">(/v1/Keys/Titel)</see>",
          "type": "string"
        },
        "AnredeID": {
          "description": "ID der Anrede\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.Anreden\">(/v1/Keys/Anreden)</see>",
          "type": "string"
        },
        "Vorname": {
          "type": "string"
        },
        "Nachname": {
          "type": "string"
        },
        "Namenszusatz": {
          "type": "string"
        },
        "Ordensname": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Land": {
          "description": "Land des Kunden (z.B. DEU)",
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Tel2": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Handy": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Webseite": {
          "type": "string"
        },
        "KostentraegerID": {
          "type": "string"
        },
        "IKGesundheitskarte": {
          "type": "string"
        },
        "VersicherungsNummer": {
          "type": "string"
        },
        "VersicherungsStatus": {
          "type": "string"
        },
        "Aktenzeichen": {
          "type": "string"
        },
        "PrivatVersichert": {
          "type": "boolean"
        },
        "Beihilfe": {
          "type": "boolean"
        },
        "AnTaubheitGrenzend": {
          "type": "boolean"
        },
        "Zuzahlungsbefreit": {
          "type": "boolean"
        },
        "ZuzahlungsbefreitNein": {
          "type": "boolean"
        },
        "ZuzahlungsbefreitBis": {
          "format": "date-time",
          "type": "string"
        },
        "GesundheitskarteGueltigBis": {
          "format": "date-time",
          "type": "string"
        },
        "Erstellungsdatum": {
          "format": "date-time",
          "type": "string"
        },
        "LetzteAenderung": {
          "format": "date-time",
          "type": "string"
        },
        "Geburtsdatum": {
          "format": "date-time",
          "type": "string"
        },
        "Werbung": {
          "type": "boolean"
        },
        "WerbungUnterschrieben": {
          "type": "boolean"
        },
        "WerbungTelefon": {
          "type": "boolean"
        },
        "WerbungPost": {
          "type": "boolean"
        },
        "WerbungEmail": {
          "type": "boolean"
        },
        "WerbungKeineGewuenscht": {
          "type": "boolean"
        },
        "KeineWerbungDatum": {
          "format": "date-time",
          "type": "string"
        },
        "GrundKeineWerbung": {
          "format": "uuid",
          "description": "ID des Grundes (auch InaktivGrund)\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.InaktivGrund\">(/v1/Keys/InaktivGrund)</see>",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DatenschutzAusgehaendigt": {
          "type": "boolean"
        },
        "DataloggingUnterschrieben": {
          "type": "boolean"
        },
        "LetztesHoergeraetR": {
          "format": "date-time",
          "type": "string"
        },
        "LetztesHoergeraetL": {
          "format": "date-time",
          "type": "string"
        },
        "LetzterBesuch": {
          "format": "date-time",
          "type": "string"
        },
        "NaechsteKontrolle": {
          "format": "date-time",
          "type": "string"
        },
        "BetreuerAkustikKuerzel": {
          "type": "string"
        },
        "BetreuerAkustikBenutzerID": {
          "type": "string"
        },
        "BetreuerOptikKuerzel": {
          "type": "string"
        },
        "BetreuerOptikBenutzerID": {
          "type": "string"
        },
        "Info": {
          "type": "string"
        },
        "ZusatzInfo": {
          "type": "string"
        },
        "NeuKundenGrundID": {
          "description": "ID des Neukunden Grundes\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.NeuKundenGrund\">(/v1/Keys/NeuKundenGrund)</see>",
          "type": "string"
        },
        "Freifeld1": {
          "type": "string"
        },
        "Freifeld2": {
          "type": "string"
        },
        "Freifeld3": {
          "type": "string"
        },
        "Freifeld4": {
          "type": "string"
        },
        "Freifeld5": {
          "type": "string"
        },
        "SMSTermin": {
          "type": "boolean"
        },
        "SMSAuftragseingang": {
          "type": "boolean"
        },
        "SMSMahnung": {
          "type": "boolean"
        },
        "SMSRatenzahlung": {
          "type": "boolean"
        },
        "SMSKontrolle": {
          "type": "boolean"
        },
        "SMSWerbung": {
          "type": "boolean"
        },
        "SMSBestellungWE": {
          "type": "boolean"
        },
        "SMSKABewilligung": {
          "type": "boolean"
        },
        "SMSGeburtstag": {
          "type": "boolean"
        },
        "SMSKeineGewuenscht": {
          "type": "boolean"
        },
        "SMSHatKeinHandy": {
          "type": "boolean"
        },
        "SMSBrilleAbholbereit": {
          "type": "boolean"
        },
        "SMSWarenversand": {
          "type": "boolean"
        },
        "ArtDesKunden": {
          "type": "string"
        },
        "ArztHNOID": {
          "type": "string"
        },
        "ArztHausID": {
          "type": "string"
        },
        "ArztAugenID": {
          "type": "string"
        },
        "Inst": {
          "type": "string"
        },
        "InaktivDatum": {
          "format": "date-time",
          "description": "Das Datum seit dem der Kunde inaktiv ist",
          "type": "string"
        },
        "GrundInaktiv": {
          "format": "uuid",
          "description": "ID des Inaktivgrundes\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.InaktivGrund\">(/v1/Keys/InaktivGrund)</see>",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NaechsterTerminDatum": {
          "format": "date-time",
          "description": "Datum des nächsten Termin mit Status (KeinStatus, Bestaetigt) dessen Termintyp die eigenschaft \"BeimKundenterminanzeigen\" hat",
          "type": "string"
        },
        "NaechsterTerminID": {
          "format": "uuid",
          "description": "ID des nächsten Termin mit Status (KeinStatus, Bestaetigt) dessen Termintyp die eigenschaft \"BeimKundenterminanzeigen\" hat",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "AsegoApi.Kunden.Models.KundenEditV1": {
      "type": "object",
      "properties": {
        "AnredeID": {
          "type": "string"
        },
        "Vorname": {
          "type": "string"
        },
        "Nachname": {
          "type": "string"
        },
        "Geburtsdatum": {
          "format": "date-time",
          "type": "string"
        },
        "PrivatVersichert": {
          "type": "boolean"
        },
        "Zuzahlungsbefreit": {
          "type": "boolean"
        },
        "ZuzahlungsbefreitBis": {
          "format": "date-time",
          "type": "string"
        },
        "KostentraegerID": {
          "type": "string"
        },
        "VersicherungsNummer": {
          "type": "string"
        },
        "VersicherungsStatus": {
          "type": "string"
        },
        "IKGesundheitskarte": {
          "type": "string"
        },
        "HNOArztID": {
          "type": "string"
        },
        "EMail": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Tel2": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Handy": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Freifeld1": {
          "type": "string"
        },
        "Freifeld2": {
          "type": "string"
        },
        "Freifeld3": {
          "type": "string"
        },
        "Freifeld4": {
          "type": "string"
        },
        "Freifeld5": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "HearooApp": {
          "type": "boolean"
        },
        "Inst": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Kunden.Models.KundenCreateV1": {
      "required": [
        "Vorname",
        "Nachname",
        "Geburtsdatum"
      ],
      "type": "object",
      "properties": {
        "AnredeID": {
          "type": "string"
        },
        "Vorname": {
          "type": "string"
        },
        "Nachname": {
          "type": "string"
        },
        "Geburtsdatum": {
          "format": "date-time",
          "type": "string"
        },
        "PrivatVersichert": {
          "type": "boolean"
        },
        "Zuzahlungsbefreit": {
          "type": "boolean"
        },
        "ZuzahlungsbefreitBis": {
          "format": "date-time",
          "type": "string"
        },
        "KostentraegerID": {
          "type": "string"
        },
        "VersicherungsNummer": {
          "type": "string"
        },
        "VersicherungsStatus": {
          "type": "string"
        },
        "IKGesundheitskarte": {
          "type": "string"
        },
        "HNOArztID": {
          "type": "string"
        },
        "EMail": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Tel2": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Handy": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Freifeld1": {
          "type": "string"
        },
        "Freifeld2": {
          "type": "string"
        },
        "Freifeld3": {
          "type": "string"
        },
        "Freifeld4": {
          "type": "string"
        },
        "Freifeld5": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "HearooApp": {
          "type": "boolean"
        },
        "Inst": {
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Lieferanten.Models.FilterLieferantenV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Lieferanten.Models.FilterLieferantenV1"
        }
      }
    },
    "AsegoApi.Lieferanten.Models.FilterLieferantenV1": {
      "description": "Suchkriterien für die Suche nach Lieferanten",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Eindeutige ID der Lieferanten",
          "type": "string"
        },
        "Suchbegriff": {
          "description": "Suchbegriff der Lieferanten",
          "type": "string"
        },
        "Firmenbezeichnung": {
          "description": "Firmenbezeichnung der Lieferanten",
          "type": "string"
        },
        "Zusatz": {
          "description": "Zusatzname der Lieferanten",
          "type": "string"
        },
        "Kundennummer": {
          "description": "Kundennummer der Lieferanten",
          "type": "string"
        },
        "Strasse": {
          "description": "Straße der Lieferanten",
          "type": "string"
        },
        "Ort": {
          "description": "Ort der Lieferanten",
          "type": "string"
        },
        "Plz": {
          "description": "Plz der Lieferanten",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer der Lieferanten",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer der Lieferanten",
          "type": "string"
        },
        "Handy": {
          "description": "Handynummer der Lieferanten",
          "type": "string"
        },
        "Email": {
          "description": "Emailadresse der Lieferanten",
          "type": "string"
        },
        "Webseite": {
          "description": "Webseite der Lieferanten",
          "type": "string"
        },
        "Info": {
          "description": "Info der Lieferanten",
          "type": "string"
        },
        "LieferantengarantieMonate": {
          "format": "int32",
          "description": "Lieferantengarantie in Monaten",
          "type": "integer"
        },
        "LieferantengarantieAbVerkaufsdatum": {
          "description": "Lieferantengarantie ab Verkaufsdatum Aktiv",
          "type": "boolean"
        },
        "Akustik": {
          "description": "Lieferanten für Akustik",
          "type": "boolean"
        },
        "Optik": {
          "description": "Lieferanten für Optik",
          "type": "boolean"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Lieferanten.Models.ListLieferantenV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Lieferanten.Models.ListLieferantenV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Lieferanten.Models.ListLieferantenV1": {
      "description": "Return Class für die Suche eines Lieferanten",
      "required": [
        "uid",
        "LieferantengarantieMonate",
        "LieferantengarantieAbVerkaufsdatum"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "description": "Eindeutige ID der Lieferanten",
          "type": "string"
        },
        "Suchbegriff": {
          "description": "Suchbegriff der Lieferanten",
          "type": "string"
        },
        "Firmenbezeichnung": {
          "description": "Firmenbezeichnung der Lieferanten",
          "type": "string"
        },
        "Zusatz": {
          "description": "Zusatzname der Lieferanten",
          "type": "string"
        },
        "Kundennummer": {
          "description": "Kundennummer der Lieferanten",
          "type": "string"
        },
        "Strasse": {
          "description": "Straße der Lieferanten",
          "type": "string"
        },
        "Ort": {
          "description": "Ort der Lieferanten",
          "type": "string"
        },
        "Plz": {
          "description": "Plz der Lieferanten",
          "type": "string"
        },
        "Tel": {
          "description": "Telefonnummer der Lieferanten",
          "type": "string"
        },
        "Fax": {
          "description": "Faxnummer der Lieferanten",
          "type": "string"
        },
        "Handy": {
          "description": "Handynummer der Lieferanten",
          "type": "string"
        },
        "Email": {
          "description": "Emailadresse der Lieferanten",
          "type": "string"
        },
        "Webseite": {
          "description": "Webseite der Lieferanten",
          "type": "string"
        },
        "Info": {
          "description": "Info der Lieferanten",
          "type": "string"
        },
        "LieferantengarantieMonate": {
          "format": "int32",
          "description": "Lieferantengarantie in Monaten",
          "type": "integer"
        },
        "LieferantengarantieAbVerkaufsdatum": {
          "description": "Lieferantengarantie ab Verkaufsdatum Aktiv",
          "type": "boolean"
        },
        "Akustik": {
          "description": "Lieferanten für Akustik",
          "type": "boolean"
        },
        "Optik": {
          "description": "Lieferanten für Optik",
          "type": "boolean"
        }
      }
    },
    "AsegoApi.Lieferanten.Models.LieferantenV1": {
      "description": "Return Class für die Details eines Lieferanten",
      "required": [
        "uid",
        "LieferantengarantieMonate",
        "LieferantengarantieAbVerkaufsdatum"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Suchbegriff": {
          "type": "string"
        },
        "Firmenbezeichnung": {
          "type": "string"
        },
        "Zusatz": {
          "type": "string"
        },
        "Kundennummer": {
          "type": "string"
        },
        "Strasse": {
          "type": "string"
        },
        "Plz": {
          "type": "string"
        },
        "Ort": {
          "type": "string"
        },
        "Tel": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Handy": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Webseite": {
          "type": "string"
        },
        "Info": {
          "type": "string"
        },
        "LieferantengarantieMonate": {
          "format": "int32",
          "type": "integer"
        },
        "LieferantengarantieAbVerkaufsdatum": {
          "type": "boolean"
        },
        "Akustik": {
          "type": "boolean"
        },
        "Optik": {
          "type": "boolean"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Vorgaenge.Models.FilterListOffenerVorlaufV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.FilterListOffenerVorlaufV1"
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.FilterListOffenerVorlaufV1": {
      "description": "Filter für die Vorgangssuche",
      "required": [
        "Vorgangsnummer"
      ],
      "type": "object",
      "properties": {
        "Inst": {
          "type": "string"
        },
        "VorgangsID": {
          "type": "string"
        },
        "Vorgangsnummer": {
          "format": "int32",
          "type": "integer"
        },
        "ErstellDatum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.DateTime]"
        },
        "BenutzerID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "KundenID": {
          "type": "string"
        },
        "AbschlussErwartet": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        }
      }
    },
    "Asego.WebApps.ValueWithCompare[System.DateTime]": {
      "description": "Für \"Equal\" Suche kann statt dem ganzen Objekt auch nur der Wert übergeben werden.\r\nz.B. || Status: 1  ||  statt  || Status: { Value: 1, Compare: \"Equal\"} ||",
      "required": [
        "Value",
        "Value2",
        "Compare"
      ],
      "type": "object",
      "properties": {
        "Value": {
          "format": "date-time",
          "type": "string"
        },
        "Value2": {
          "format": "date-time",
          "description": "For CompareEqual:Between",
          "type": "string"
        },
        "Compare": {
          "description": " [0 = Equal, 1 = Not, 2 = Less, 3 = LessThan, 4 = Greater, 5 = GreaterThan, 6 = Like, 7 = Between] ",
          "enum": [
            "Equal",
            "Not",
            "Less",
            "LessThan",
            "Greater",
            "GreaterThan",
            "Like",
            "Between"
          ],
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Vorgaenge.Models.ListOffenerVorlaufV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.ListOffenerVorlaufV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.ListOffenerVorlaufV1": {
      "required": [
        "Vorgangsnummer",
        "ErstellDatum",
        "AnzahlHG",
        "AnzahlMasker"
      ],
      "type": "object",
      "properties": {
        "Inst": {
          "type": "string"
        },
        "VorgangsID": {
          "type": "string"
        },
        "Vorgangsnummer": {
          "format": "int32",
          "type": "integer"
        },
        "ErstellDatum": {
          "format": "date-time",
          "type": "string"
        },
        "AnzahlHG": {
          "format": "int32",
          "description": "Anzahl Hörgeräte",
          "type": "integer"
        },
        "AnzahlMasker": {
          "format": "int32",
          "type": "integer"
        },
        "BenutzerID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "KundenID": {
          "type": "string"
        },
        "AbschlussErwartet": {
          "format": "date-time",
          "type": "string"
        },
        "BemerkungsText": {
          "type": "string"
        },
        "Notiz": {
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Serviceplan.Models.FilterServiceplanV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Serviceplan.Models.FilterServiceplanV1"
        }
      }
    },
    "AsegoApi.Serviceplan.Models.FilterServiceplanV1": {
      "description": "Suchkriterien für die Suche nach Serviceplänen",
      "type": "object",
      "properties": {
        "DatumAb": {
          "format": "date-time",
          "description": "Alle Serviceplan Termine Ab einem bestimmten Zeitraum",
          "type": "string"
        },
        "DatumBis": {
          "format": "date-time",
          "description": "Alle Serviceplan Termine Bis einem bestimmten Zeitraum",
          "type": "string"
        },
        "Inst": {
          "description": "Die Filialen in denen Gesucht werden soll, leer  = alle, oder Verknüft",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Serviceplan",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Bezeichnung": {
          "description": "Bezeichnung",
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "description": "Datum des Serviceplans",
          "type": "string"
        },
        "Anlass": {
          "description": "Anlass",
          "type": "string"
        },
        "Dauer": {
          "format": "int32",
          "description": "Standardmäßige Dauer",
          "type": "integer"
        },
        "Status": {
          "description": "Status des Serviceplans",
          "type": "string"
        },
        "Bereich": {
          "format": "int32",
          "description": "Bereich des Serviceplans",
          "type": "integer"
        },
        "SMSErinnerung": {
          "description": "SMS Erinnerung",
          "type": "boolean"
        },
        "KundenID": {
          "format": "uuid",
          "description": "ID des Kunden",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AngelegtVonKuerzel": {
          "description": "Angelegt von Benutzer Kuerzel",
          "type": "string"
        },
        "AngelegtVonBenutzerID": {
          "description": "Angelegt von BenutzerID",
          "type": "string"
        },
        "AngelegtAm": {
          "format": "date-time",
          "description": "Angelegt am",
          "type": "string"
        },
        "LetzteAenderungVonKuerzel": {
          "description": "Letzte Änderung von Benutzer Kuerzel",
          "type": "string"
        },
        "LetzteAenderungVonBenutzerID": {
          "description": "Letzte Änderung von BenutzerID",
          "type": "string"
        },
        "LetzteAenderung": {
          "format": "date-time",
          "description": "Letzte Änderung am",
          "type": "string"
        },
        "KalenderVorlauf": {
          "format": "int32",
          "description": "Kalender Vorlauf",
          "type": "integer"
        },
        "TerminID": {
          "description": "ID des Termins",
          "type": "string"
        },
        "TerminTypID": {
          "description": "TerminTyp ID",
          "type": "string"
        },
        "ErinnerungGesendetAm": {
          "format": "date-time",
          "description": "Erinnerung gesendet am",
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Serviceplan.Models.ListServiceplanV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Serviceplan.Models.ListServiceplanV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Serviceplan.Models.ListServiceplanV1": {
      "description": "Return Class für die Suche eines Serviceplans",
      "required": [
        "uid",
        "Bereich",
        "SMSErinnerung"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Serviceplan",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Bezeichnung": {
          "description": "Bezeichnung",
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "description": "Datum des Serviceplans",
          "type": "string"
        },
        "Anlass": {
          "description": "Anlass",
          "type": "string"
        },
        "Dauer": {
          "format": "int32",
          "description": "Standardmäßige Dauer",
          "type": "integer"
        },
        "Status": {
          "description": "Status des Serviceplans",
          "type": "string"
        },
        "Bereich": {
          "format": "int32",
          "description": "Bereich des Serviceplans",
          "type": "integer"
        },
        "SMSErinnerung": {
          "description": "SMS Erinnerung",
          "type": "boolean"
        },
        "KundenID": {
          "format": "uuid",
          "description": "ID des Kunden",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AngelegtVonKuerzel": {
          "description": "Angelegt von Benutzer Kuerzel",
          "type": "string"
        },
        "AngelegtVonBenutzerID": {
          "description": "Angelegt von BenutzerID",
          "type": "string"
        },
        "AngelegtAm": {
          "format": "date-time",
          "description": "Angelegt am",
          "type": "string"
        },
        "LetzteAenderungVonKuerzel": {
          "description": "Letzte Änderung von Benutzer Kuerzel",
          "type": "string"
        },
        "LetzteAenderungVonBenutzerID": {
          "description": "Letzte Änderung von BenutzerID",
          "type": "string"
        },
        "LetzteAenderung": {
          "format": "date-time",
          "description": "Letzte Änderung am",
          "type": "string"
        },
        "KalenderVorlauf": {
          "format": "int32",
          "description": "Kalender Vorlauf",
          "type": "integer"
        },
        "TerminID": {
          "description": "ID des Termins",
          "type": "string"
        },
        "TerminTypID": {
          "description": "TerminTyp ID",
          "type": "string"
        },
        "ErinnerungGesendetAm": {
          "format": "date-time",
          "description": "Erinnerung gesendet am",
          "type": "string"
        }
      }
    },
    "AsegoApi.Serviceplan.Models.ServiceplanV1": {
      "description": "Return Class für die Details eines Serviceplans",
      "required": [
        "uid",
        "Bereich",
        "SMSErinnerung"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Bezeichnung": {
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "type": "string"
        },
        "Anlass": {
          "type": "string"
        },
        "Dauer": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "description": "Der Status des Serviceplaneintrages.\r\n<see cref=\"M:AsegoApi.Keys.KeysV1Controller.ServiceplanStatus\">(/v1/Keys/ServiceplanStatus)</see>",
          "type": "string"
        },
        "Bereich": {
          "format": "int32",
          "type": "integer"
        },
        "SMSErinnerung": {
          "type": "boolean"
        },
        "KundenID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AngelegtVon": {
          "type": "string"
        },
        "AngelegtVonBenutzerID": {
          "type": "string"
        },
        "AngelegtAm": {
          "format": "date-time",
          "type": "string"
        },
        "LetzteAenderungVon": {
          "type": "string"
        },
        "LetzteAenderungVonBenutzerID": {
          "type": "string"
        },
        "LetzteAenderungAm": {
          "format": "date-time",
          "type": "string"
        },
        "KalenderVorlauf": {
          "format": "int32",
          "type": "integer"
        },
        "TerminTypID": {
          "type": "string"
        },
        "TerminID": {
          "type": "string"
        },
        "ErinnerungGesendetAm": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Termine.Models.FilterTermineV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Termine.Models.FilterTermineV1"
        }
      }
    },
    "AsegoApi.Termine.Models.FilterTermineV1": {
      "description": "Suchkriterien für die Suche nach Terminen",
      "type": "object",
      "properties": {
        "Inst": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "BenutzerID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TermineAbDatum": {
          "format": "date-time",
          "type": "string"
        },
        "TermineBisDatum": {
          "format": "date-time",
          "type": "string"
        },
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Termine",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Start": {
          "format": "date-time",
          "description": "Start des Termins",
          "type": "string"
        },
        "Ende": {
          "format": "date-time",
          "description": "Ende des Termins",
          "type": "string"
        },
        "TerminTypID": {
          "format": "uuid",
          "description": "TerminTypID des Termins",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Bezeichnung": {
          "description": "Bezeichnung des Termins",
          "type": "string"
        },
        "Ganztag": {
          "description": "Ganztag Status des Termins",
          "type": "boolean"
        },
        "TerminStatusID": {
          "format": "int32",
          "description": "ID des TerminStatus\r\n<see cref=\"M:AsegoApi.Termine.TermineV1Controller.TerminStatus\">(/v1/Termine/TerminStatus)</see>",
          "type": "integer"
        },
        "KundenID": {
          "format": "uuid",
          "description": "KundenID des Termins",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TerminWiederholungID": {
          "format": "uuid",
          "description": "TerminWiederholungID des Termins",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IstWebTermin": {
          "description": "IstWebTermin Status des Termins",
          "type": "boolean"
        },
        "Ausgeblendet": {
          "description": "Ausgeblendet Status des Termins",
          "type": "boolean"
        },
        "LetzteAenderung": {
          "format": "date-time",
          "description": "Das letzte Änderungsdatum",
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Termine.Models.ListTermineV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Termine.Models.ListTermineV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Termine.Models.ListTermineV1": {
      "description": "Return Class für die Suche eines Termins",
      "required": [
        "uid",
        "Ganztag",
        "TerminStatusID",
        "IstWebTermin",
        "Ausgeblendet",
        "Inst"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Termine",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Start": {
          "format": "date-time",
          "description": "Start des Termins",
          "type": "string"
        },
        "Ende": {
          "format": "date-time",
          "description": "Ende des Termins",
          "type": "string"
        },
        "TerminTypID": {
          "format": "uuid",
          "description": "TerminTypID des Termins",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Bezeichnung": {
          "description": "Bezeichnung des Termins",
          "type": "string"
        },
        "Ganztag": {
          "description": "Ganztag Status des Termins",
          "type": "boolean"
        },
        "TerminStatusID": {
          "format": "int32",
          "description": "ID des TerminStatus\r\n<see cref=\"M:AsegoApi.Termine.TermineV1Controller.TerminStatus\">(/v1/Termine/TerminStatus)</see>",
          "type": "integer"
        },
        "KundenID": {
          "format": "uuid",
          "description": "KundenID des Termins",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TerminWiederholungID": {
          "format": "uuid",
          "description": "TerminWiederholungID des Termins",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IstWebTermin": {
          "description": "IstWebTermin Status des Termins",
          "type": "boolean"
        },
        "Ausgeblendet": {
          "description": "Ausgeblendet Status des Termins",
          "type": "boolean"
        },
        "Inst": {
          "type": "string"
        },
        "LetzteAenderung": {
          "format": "date-time",
          "description": "Das letzte Änderungsdatum",
          "type": "string"
        }
      }
    },
    "AsegoApi.Termine.Models.TermineV1": {
      "description": "Return Class für die Details eines Termins",
      "required": [
        "uid",
        "Ganztag",
        "TerminStatusID",
        "IstWebTermin",
        "Ausgeblendet",
        "Inst"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "description": "Uniqueidentifier des Termins",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Start": {
          "format": "date-time",
          "type": "string"
        },
        "Ende": {
          "format": "date-time",
          "type": "string"
        },
        "TerminTypID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Bezeichnung": {
          "type": "string"
        },
        "Ganztag": {
          "type": "boolean"
        },
        "TerminStatusID": {
          "format": "int32",
          "description": "ID des TerminStatus\r\n<see cref=\"M:AsegoApi.Termine.TermineV1Controller.TerminStatus\">(/v1/Termine/TerminStatus)</see>",
          "type": "integer"
        },
        "KundenID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TerminWiederholungID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Beschreibung": {
          "type": "string"
        },
        "IstWebTermin": {
          "type": "boolean"
        },
        "Ausgeblendet": {
          "type": "boolean"
        },
        "letztesUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "BenutzerIDs": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "RaeumeIDs": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "GeraeteIDs": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "Inst": {
          "type": "string"
        },
        "LetzteAenderung": {
          "format": "date-time",
          "description": "Das letzte Änderungsdatum",
          "type": "string"
        }
      }
    },
    "AsegoApi.Termine.Services.TerminStatusV1": {
      "required": [
        "Id",
        "AnzeigeText"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "AnzeigeText": {
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Termintyp.Models.FilterTermintypV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Termintyp.Models.FilterTermintypV1"
        }
      }
    },
    "AsegoApi.Termintyp.Models.FilterTermintypV1": {
      "description": "Suchkriterien für die Suche nach Termintypen",
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Termintyp",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Bezeichnung": {
          "description": "Bezeichnung des Termintyps",
          "type": "string"
        },
        "Kuerzel": {
          "description": "Kürzel des Termintyps",
          "type": "string"
        },
        "Sichtbar": {
          "description": "Sichtbar Eigenschaft des Termintyps",
          "type": "boolean"
        },
        "AlleFilialen": {
          "description": "AlleFilialen Aktiv",
          "type": "boolean"
        },
        "BeimKundenTerminAnzeigen": {
          "description": "Beim Kunden Termin anzeigen Eigenschaft",
          "type": "boolean"
        },
        "Dauer": {
          "description": "Dauer des Termintyps",
          "type": "string"
        },
        "RessourcenTrotzTerminFrei": {
          "description": "Ressource trotz Termin frei",
          "type": "boolean"
        },
        "Filialen": {
          "description": "Filialen des Termintyps",
          "type": "string"
        },
        "Farbe": {
          "description": "Farbe des Termintyps",
          "type": "string"
        },
        "KundeBenachrichtigen": {
          "description": "Kunden Benachrichtigen Eigenschaft",
          "type": "boolean"
        },
        "NachBearbeitungszeit": {
          "description": "Nachbearbeitungszeit des Termintyps",
          "type": "string"
        },
        "OnlineSichtbar": {
          "description": "Online Sichtbar Eigenschaft",
          "type": "boolean"
        },
        "VorBearbeitungszeit": {
          "description": "Vorbearbeitungszeit des Termintyps",
          "type": "string"
        },
        "Raumpflicht": {
          "description": "Raumpflicht Eigenschaft",
          "type": "boolean"
        },
        "Benutzerpflicht": {
          "description": "Benutzerpflicht Eigenschaft",
          "type": "boolean"
        },
        "Geraetpflicht": {
          "description": "Gerätepflicht Eigenschaft",
          "type": "boolean"
        },
        "GeloeschtAm": {
          "format": "date-time",
          "description": "Datum Gelöscht am",
          "type": "string"
        },
        "RessourcenTrotzTerminOnlineFrei": {
          "description": "Ressourcen trotz Termin Online frei",
          "type": "boolean"
        },
        "OnlineBezeichnung": {
          "description": "Online Bezeichnung des Termintyps",
          "type": "string"
        },
        "OnlineGruppe": {
          "description": "Online Gruppe des Termintyps",
          "type": "string"
        },
        "Gruppe": {
          "description": "Gruppe des Termintyps",
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Termintyp.Models.ListTermintypV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Termintyp.Models.ListTermintypV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Termintyp.Models.ListTermintypV1": {
      "description": "Return Class für die Suche eines Termintyps",
      "required": [
        "uid",
        "Sichtbar",
        "AlleFilialen",
        "BeimKundenTerminAnzeigen",
        "RessourcenTrotzTerminFrei",
        "KundeBenachrichtigen",
        "OnlineSichtbar",
        "Raumpflicht",
        "Benutzerpflicht",
        "Geraetpflicht",
        "RessourcenTrotzTerminOnlineFrei"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "description": "Eindeutige ID der Termintyp",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Bezeichnung": {
          "description": "Bezeichnung des Termintyps",
          "type": "string"
        },
        "Kuerzel": {
          "description": "Kürzel des Termintyps",
          "type": "string"
        },
        "Sichtbar": {
          "description": "Sichtbar Eigenschaft des Termintyps",
          "type": "boolean"
        },
        "AlleFilialen": {
          "description": "AlleFilialen Aktiv",
          "type": "boolean"
        },
        "BeimKundenTerminAnzeigen": {
          "description": "Beim Kunden Termin anzeigen Eigenschaft",
          "type": "boolean"
        },
        "Dauer": {
          "description": "Dauer des Termintyps",
          "type": "string"
        },
        "RessourcenTrotzTerminFrei": {
          "description": "Ressource trotz Termin frei",
          "type": "boolean"
        },
        "Filialen": {
          "description": "Filialen des Termintyps",
          "type": "string"
        },
        "Farbe": {
          "description": "Farbe des Termintyps",
          "type": "string"
        },
        "KundeBenachrichtigen": {
          "description": "Kunden Benachrichtigen Eigenschaft",
          "type": "boolean"
        },
        "NachBearbeitungszeit": {
          "description": "Nachbearbeitungszeit des Termintyps",
          "type": "string"
        },
        "OnlineSichtbar": {
          "description": "Online Sichtbar Eigenschaft",
          "type": "boolean"
        },
        "VorBearbeitungszeit": {
          "description": "Vorbearbeitungszeit des Termintyps",
          "type": "string"
        },
        "Raumpflicht": {
          "description": "Raumpflicht Eigenschaft",
          "type": "boolean"
        },
        "Benutzerpflicht": {
          "description": "Benutzerpflicht Eigenschaft",
          "type": "boolean"
        },
        "Geraetpflicht": {
          "description": "Gerätepflicht Eigenschaft",
          "type": "boolean"
        },
        "GeloeschtAm": {
          "format": "date-time",
          "description": "Datum Gelöscht am",
          "type": "string"
        },
        "RessourcenTrotzTerminOnlineFrei": {
          "description": "Ressourcen trotz Termin Online frei",
          "type": "boolean"
        },
        "OnlineBezeichnung": {
          "description": "Online Bezeichnung des Termintyps",
          "type": "string"
        },
        "OnlineGruppe": {
          "description": "Online Gruppe des Termintyps",
          "type": "string"
        },
        "Gruppe": {
          "description": "Gruppe des Termintyps",
          "type": "string"
        }
      }
    },
    "AsegoApi.Termintyp.Models.TermintypV1": {
      "description": "Return Class für die Details eines Termintyps",
      "required": [
        "uid",
        "Sichtbar",
        "AlleFilialen",
        "BeimKundenTerminAnzeigen",
        "RessourcenTrotzTerminFrei",
        "KundeBenachrichtigen",
        "OnlineSichtbar",
        "Raumpflicht",
        "Benutzerpflicht",
        "Geraetpflicht",
        "RessourcenTrotzTerminOnlineFrei"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Bezeichnung": {
          "type": "string"
        },
        "Kuerzel": {
          "type": "string"
        },
        "Sichtbar": {
          "type": "boolean"
        },
        "AlleFilialen": {
          "type": "boolean"
        },
        "BeimKundenTerminAnzeigen": {
          "type": "boolean"
        },
        "Dauer": {
          "type": "string"
        },
        "RessourcenTrotzTerminFrei": {
          "type": "boolean"
        },
        "Filialen": {
          "type": "string"
        },
        "Farbe": {
          "type": "string"
        },
        "KundeBenachrichtigen": {
          "type": "boolean"
        },
        "NachBearbeitungszeit": {
          "type": "string"
        },
        "OnlineSichtbar": {
          "type": "boolean"
        },
        "VorBearbeitungszeit": {
          "type": "string"
        },
        "Raumpflicht": {
          "type": "boolean"
        },
        "Benutzerpflicht": {
          "type": "boolean"
        },
        "Geraetpflicht": {
          "type": "boolean"
        },
        "GeloeschtAm": {
          "format": "date-time",
          "type": "string"
        },
        "RessourcenTrotzTerminOnlineFrei": {
          "type": "boolean"
        },
        "OnlineBezeichnung": {
          "type": "string"
        },
        "OnlineGruppe": {
          "type": "string"
        },
        "Gruppe": {
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Umsaetze.Models.FilterUmsaetzeV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Umsaetze.Models.FilterUmsaetzeV1"
        }
      }
    },
    "AsegoApi.Umsaetze.Models.FilterUmsaetzeV1": {
      "description": "Suchkriterien für die Suche nach Umsätze",
      "type": "object",
      "properties": {
        "Datum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "uid": {
          "type": "string"
        },
        "Typ": {
          "description": "RKA = RechnungKasse, RGK= RechnungKunde, BAR",
          "type": "string"
        },
        "Inst": {
          "type": "string"
        },
        "Gesamtbetrag": {
          "format": "double",
          "type": "number"
        },
        "GesamtbetragNetto": {
          "format": "double",
          "type": "number"
        },
        "Storno": {
          "type": "boolean"
        },
        "Weitergeleitet": {
          "type": "boolean"
        },
        "BenutzerKuerzel": {
          "type": "string"
        },
        "KundenID": {
          "type": "string"
        },
        "VorgangID": {
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Umsaetze.Models.ListUmsaetzeV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Umsaetze.Models.ListUmsaetzeV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Umsaetze.Models.ListUmsaetzeV1": {
      "description": "Return Class für die Suche der Umsätze",
      "required": [
        "Typ",
        "Datum",
        "Gesamtbetrag",
        "GesamtbetragNetto",
        "Storno",
        "Weitergeleitet"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Typ": {
          "description": "RKA = RechnungKasse, RGK= RechnungKunde, BAR",
          "type": "string"
        },
        "Datum": {
          "format": "date-time",
          "type": "string"
        },
        "Inst": {
          "type": "string"
        },
        "Gesamtbetrag": {
          "format": "double",
          "type": "number"
        },
        "GesamtbetragNetto": {
          "format": "double",
          "type": "number"
        },
        "Storno": {
          "type": "boolean"
        },
        "Weitergeleitet": {
          "type": "boolean"
        },
        "BenutzerKuerzel": {
          "type": "string"
        },
        "KundenID": {
          "type": "string"
        },
        "VorgangID": {
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Vorgaenge.Models.FilterListVorgangV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.FilterListVorgangV1"
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.FilterListVorgangV1": {
      "description": "Filter für die Vorgangssuche",
      "type": "object",
      "properties": {
        "Typ": {
          "description": "Grenzt die Suche auf bestimmte VorgangsTypen ein.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "KasseStatus": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Int32]"
        },
        "KundeStatus": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Int32]"
        },
        "uid": {
          "type": "string"
        },
        "Inst": {
          "type": "string"
        },
        "ErstellDatum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "AbgabeDatum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "BenutzerID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "KundenID": {
          "description": "Grenzt die Suche der Vorgänge auf die Vorgänge EINES Kunden ein.",
          "type": "string"
        }
      }
    },
    "Asego.WebApps.ValueWithCompare[System.Int32]": {
      "description": "Für \"Equal\" Suche kann statt dem ganzen Objekt auch nur der Wert übergeben werden.\r\nz.B. || Status: 1  ||  statt  || Status: { Value: 1, Compare: \"Equal\"} ||",
      "required": [
        "Value",
        "Value2",
        "Compare"
      ],
      "type": "object",
      "properties": {
        "Value": {
          "format": "int32",
          "type": "integer"
        },
        "Value2": {
          "format": "int32",
          "description": "For CompareEqual:Between",
          "type": "integer"
        },
        "Compare": {
          "description": " [0 = Equal, 1 = Not, 2 = Less, 3 = LessThan, 4 = Greater, 5 = GreaterThan, 6 = Like, 7 = Between] ",
          "enum": [
            "Equal",
            "Not",
            "Less",
            "LessThan",
            "Greater",
            "GreaterThan",
            "Like",
            "Between"
          ],
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Vorgaenge.Models.ListVorgangV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.ListVorgangV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.ListVorgangV1": {
      "required": [
        "KasseStatus",
        "KundeStatus"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "Typ": {
          "type": "string"
        },
        "Inst": {
          "type": "string"
        },
        "ErstellDatum": {
          "format": "date-time",
          "type": "string"
        },
        "AbgabeDatum": {
          "format": "date-time",
          "type": "string"
        },
        "BenutzerID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "KasseStatus": {
          "format": "int32",
          "description": "Verarbeitungsstatus Kassenanteil: \r\n0 = keinen abzurechnenden Anteil\r\n1 = noch nicht verarbeitet;\r\n2 = verarbeitet / abgerechnet",
          "type": "integer"
        },
        "KundeStatus": {
          "format": "int32",
          "description": "Verarbeitungsstatus Kundenanteil: \r\n0 = keinen abzurechnenden Anteil\r\n1 = noch nicht verarbeitet;\r\n2 = verarbeitet / abgerechnet",
          "type": "integer"
        },
        "KundenID": {
          "type": "string"
        },
        "MoreData": {
          "description": "Wenn dieser Vorgangstyp über weitere Daten verfügt, werden die Enpoints zum Abrufen hier aufgelistet.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.LeistungsaufstellungV1": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "VorgangsID": {
          "description": "ID des Vorgangs zu dem die Leistungsaustellung gehört",
          "type": "string"
        },
        "KundenID": {
          "description": "ID des Kunden zu dem die Leistungsaustellung gehört",
          "type": "string"
        },
        "KundenRabatt": {
          "format": "double",
          "description": "Angabe des Rabatts (in Euro oder in Prozent in Abhängigkeit von KundenRabattInProzent)",
          "type": "number"
        },
        "KundenRabattBetrag": {
          "format": "double",
          "description": "der Kundenrabatt in Euro",
          "type": "number"
        },
        "KundenRabattMwSt": {
          "format": "double",
          "description": "MwSt.-Satz (z.B. 7% od. 19%) der für den Rabattbetrag angewendet wurde",
          "type": "number"
        },
        "Positionen": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Vorgaenge.Interfaces.ILeistungsaufstellungPos"
          }
        }
      }
    },
    "AsegoApi.Vorgaenge.Interfaces.ILeistungsaufstellungPos": {
      "required": [
        "GesamtBetrag",
        "Eigenanteil",
        "Zuzahlung",
        "MwSt",
        "Menge"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "KurzText": {
          "description": "wie Bezeichnung der Position (im Gegensatz zum Langtext aus dem Artikel)",
          "type": "string"
        },
        "GesamtBetrag": {
          "format": "double",
          "description": "Menge mal Einzelbetrag - Pos.Rabatt\r\n=&gt; Brutto!",
          "type": "number"
        },
        "Eigenanteil": {
          "format": "double",
          "description": "Kundenanteil (= Pos.Gesamtbetrag - Pos.Zuzahlung)\r\n=&gt; Brutto!",
          "type": "number"
        },
        "Zuzahlung": {
          "format": "double",
          "description": "Kasenanteil",
          "type": "number"
        },
        "MwSt": {
          "format": "double",
          "description": "Steuersatz der Position",
          "type": "number"
        },
        "Rabatt": {
          "format": "double",
          "description": "Positionsrabatt",
          "type": "number"
        },
        "Menge": {
          "format": "double",
          "description": "Menge (i.d.R. Angabe in Stück)",
          "type": "number"
        },
        "ArtikelID": {
          "description": "Verknüpfung zum Artikel",
          "type": "string"
        },
        "GeraeteID": {
          "description": "Verknüpfung zum Gerät (Seriennummerartikel)",
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Vorgaenge.Models.FilterListLeistungsaufstellungV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.FilterListLeistungsaufstellungV1"
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.FilterListLeistungsaufstellungV1": {
      "type": "object",
      "properties": {
        "VorgangsID": {
          "type": "string"
        },
        "KundenRabatt": {
          "format": "double",
          "type": "number"
        },
        "KundenRabattBetrag": {
          "format": "double",
          "type": "number"
        },
        "KundenRabattMwSt": {
          "format": "double",
          "type": "number"
        },
        "KundenID": {
          "type": "string"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Vorgaenge.Models.ListLeistungsaufstellungV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.ListLeistungsaufstellungV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.ListLeistungsaufstellungV1": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "VorgangsID": {
          "description": "ID des Vorgangs zu dem die Leistungsaustellung gehört",
          "type": "string"
        },
        "KundenID": {
          "description": "ID des Kunden zu dem die Leistungsaustellung gehört",
          "type": "string"
        },
        "KundenRabatt": {
          "format": "double",
          "description": "Angabe des Rabatts (in Euro oder in Prozent in Abhängigkeit von KundenRabattInProzent)",
          "type": "number"
        },
        "KundenRabattBetrag": {
          "format": "double",
          "description": "der Kundenrabatt in Euro",
          "type": "number"
        },
        "KundenRabattMwSt": {
          "format": "double",
          "description": "MwSt.-Satz (z.B. 7% od. 19%) der für den Rabattbetrag angewendet wurde",
          "type": "number"
        },
        "Positionen": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Vorgaenge.Interfaces.ILeistungsaufstellungPos"
          }
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.AnpassungV1": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "ErstellDatum": {
          "format": "date-time",
          "type": "string"
        },
        "AbgabeDatum": {
          "format": "date-time",
          "type": "string"
        },
        "AbbruchDatum": {
          "format": "date-time",
          "type": "string"
        },
        "DauerAnpassung": {
          "description": "Dauer der Anpassung: Berechnet AbgabeDatum - ErstellDatum. Format Timespan =&gt; Days.Hours:Minutes:Seconds",
          "type": "string",
          "readOnly": true
        },
        "ArztID": {
          "type": "string"
        },
        "AbbruchGrundTx": {
          "type": "string"
        },
        "Bemerkung": {
          "type": "string"
        }
      }
    },
    "AsegoApi.SearchParameterWithOrderBy[AsegoApi.Vorgaenge.Models.FilterVorgangAbbruchV1]": {
      "required": [
        "List"
      ],
      "type": "object",
      "properties": {
        "OrderBy": {
          "description": "List of OrderItems, all Fieldnames of the ResultType can be used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.OrderItem"
          }
        },
        "List": {
          "$ref": "#/definitions/AsegoApi.ListParameter"
        },
        "Search": {
          "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.FilterVorgangAbbruchV1"
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.FilterVorgangAbbruchV1": {
      "required": [
        "Vorgangsnummer"
      ],
      "type": "object",
      "properties": {
        "Inst": {
          "type": "string"
        },
        "VorgangsID": {
          "type": "string"
        },
        "KundenID": {
          "type": "string"
        },
        "Vorgangsnummer": {
          "format": "int32",
          "type": "integer"
        },
        "VorgangBenutzerID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ErstellDatum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "AbbruchDatum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "AbbruchGrund": {
          "type": "string"
        },
        "VorlaufDatum": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "VorlaufDatum_Li": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "VorlaufDatum_Re": {
          "$ref": "#/definitions/Asego.WebApps.ValueWithCompare[System.Nullable[System.DateTime]]"
        },
        "VorlaufBenutzerID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "AsegoApi.ListResultResponse[AsegoApi.Vorgaenge.Models.VorgangAbbruchV1]": {
      "type": "object",
      "properties": {
        "page": {
          "$ref": "#/definitions/AsegoApi.ListResultCount"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsegoApi.Vorgaenge.Models.VorgangAbbruchV1"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AsegoApi.Vorgaenge.Models.VorgangAbbruchV1": {
      "required": [
        "Vorgangsnummer",
        "AbbruchDatum"
      ],
      "type": "object",
      "properties": {
        "Inst": {
          "type": "string"
        },
        "VorgangsID": {
          "type": "string"
        },
        "KundenID": {
          "type": "string"
        },
        "Vorgangsnummer": {
          "format": "int32",
          "type": "integer"
        },
        "VorgangBenutzerID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ErstellDatum": {
          "format": "date-time",
          "type": "string"
        },
        "AbbruchDatum": {
          "format": "date-time",
          "type": "string"
        },
        "AbbruchGrund": {
          "type": "string"
        },
        "VorlaufDatum": {
          "format": "date-time",
          "type": "string"
        },
        "VorlaufDatum_Li": {
          "format": "date-time",
          "type": "string"
        },
        "VorlaufDatum_Re": {
          "format": "date-time",
          "type": "string"
        },
        "VorlaufBenutzerID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "description": "OAuth2 Implicit Grant",
      "flow": "password",
      "tokenUrl": "https://betatest.asego-online.com:444/auth/token",
      "scopes": {
        "Authorize": "Authorize"
      }
    }
  }
}